{"version":3,"sources":["scripts/convertToDate.js","images/logo.png","images/trainings.svg","images/events.svg","images/regattas.svg","images/settings.svg","scripts/findWeek.js","scripts/getOrdinals.js","components/Header.js","components/Member.js","components/Boat.js","components/MemberList.js","components/Crew.js","components/CrewList.js","components/CrewMaker.js","components/SidePanel.js","components/Crews.js","components/AddMember.js","components/EditMember.js","components/FindMember.js","components/DateItem.js","components/MainPanel.js","components/CreateTraining.js","components/Calendar.js","components/App.js","serviceWorker.js","index.js"],"names":["getOrdinals","require","module","exports","date_s","date","Date","getDay","getDate","getMonth","prototype","getWeek","this","getTime","setHours","setDate","week1","getFullYear","Math","round","getWeekYear","date1","date2","date_1","date_2","num","Header","props","onClick","e","pageupdate","src","LogoImg","alt","Member","stopPropagation","callback","name","className","selected","Boat","cssclasses","concat","increw","data","class","MemberList","useState","listActive","switchList","members","map","item","i","memberclick","key","includes","boats","boat","boatselected","boatclick","listSwitch","listclick","savecrews","Crew","event","id","Object","getOwnPropertyNames","length","CrewList","crew_list","crews","crew","addcrew","CrewMaker","memberList","updateMemberList","boatList","updateBoatList","updateSelected","boatSelected","updateBoatSelected","updateCrews","boatSelect","handleSelect","member_name","prevState","filter","addMembers","crew_id","my_crews","forEach","push","newMemList","mem","newBoatList","member","new_crew","useEffect","fetch","squad","then","res","json","firstName","lastName","substring","data_to_send","training_id","training","console","log","method","headers","body","JSON","stringify","SidePanel","squad_names","squads","updateSquad","currentSquad","panelUpdate","TrainingsIcon","RegattasIcon","EventsIcon","SettingsIcon","Crews","crews_display","undefined","entries","constructor","j","AddMember","updateFirstName","updateLastName","errors","updateErrors","handleChange","target","value","squadsOptions","errorsList","error","onSubmit","preventDefault","newErrors","type","onChange","EditMember","closePanel","FindMember","search","updateSearch","searchedMembers","updateSearchedMembers","editMember","updateEditMember","window","confirm","_id","DateItem","colorCode","colour","style","convertDate","location","MainPanel","infoPanelDisplay","updateInfoPanelDisplay","AddMemberDropDown","updateAddMemberDropDown","FindMemberDropDown","updateFindMemberDropDown","trainingList","trainings","handleClick","desc","description","startTime","endTime","sort","a","b","currentPanel","train","now","compareWeek","parse","currentTraining","CreateTraining","updateName","updateDesc","updateLocation","updateDate","endDate","updateEndDate","start_time","updateStartTime","end_time","updateEndTime","recurring","updateRecurring","updateColour","recurringInput","display","placeholder","checked","Calendar","createTraining","updateCreateTraining","updateCurrentSquad","updateSquads","updateTrainings","updateCurrentTraining","updateCurrentPanel","App","page","updatePage","selectedTraining","updateSelectedTraining","selectedSquad","updateSelectedSquad","changePage","toPage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2503ee9d.chunk.js","sourcesContent":["\r\nconst getOrdinals =require('./getOrdinals')\r\n\r\nfunction toDateString(date_s) {\r\n    let date = new Date(date_s)\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    return `${days[date.getDay()]}\r\n            ${date.getDate()}${getOrdinals(date.getDate())}\r\n            ${months[date.getMonth()]}`\r\n}\r\n\r\nmodule.exports = toDateString","module.exports = __webpack_public_path__ + \"static/media/logo.1c1f15ca.png\";","module.exports = __webpack_public_path__ + \"static/media/trainings.8e478435.svg\";","module.exports = __webpack_public_path__ + \"static/media/events.80914e2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/regattas.fb82b626.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.04e848f8.svg\";","// This script is released to the public domain and may be used, modified and\r\n// distributed without restrictions. Attribution not necessary but appreciated.\r\n// Source: https://weeknumber.net/how-to/javascript\r\n\r\n// Returns the ISO week of the date.\r\nDate.prototype.getWeek = function() {\r\n    var date = new Date(this.getTime());\r\n    date.setHours(0, 0, 0, 0);\r\n    // Thursday in current week decides the year.\r\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n    // January 4 is always in week 1.\r\n    var week1 = new Date(date.getFullYear(), 0, 4);\r\n    // Adjust to Thursday in week 1 and count number of weeks from date to week1.\r\n    return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000\r\n                          - 3 + (week1.getDay() + 6) % 7) / 7);\r\n  }\r\n  \r\n  // Returns the four-digit year corresponding to the ISO week of the date.\r\n  Date.prototype.getWeekYear = function() {\r\n    var date = new Date(this.getTime());\r\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n    return date.getFullYear();\r\n  }\r\n\r\n\r\n//Returns true if date 1 is the same week as date 2\r\n\r\nfunction findWeek(date1,date2) {\r\n    let date_1 = new Date(date1)\r\n    let date_2 = new Date(date2)\r\n\r\n    if(date_1.getWeek() === date_2.getWeek()){\r\n        return true\r\n    }\r\n    else {\r\n        return false\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = findWeek\r\n","function getOrdinals(num){\r\n    if(num === 1 || num === 21 || num === 31) return \"st\"\r\n    else if(num === 2 || num === 22) return \"nd\"\r\n    else if(num === 3 || num === 23) return \"rd\"\r\n    else {\r\n        return \"th\"\r\n    }\r\n}\r\n\r\nmodule.exports = getOrdinals","import React from 'react'\r\n\r\nimport LogoImg from '../images/logo.png'\r\n\r\nfunction Header(props){\r\n    function handleClick(e){\r\n        props.pageupdate(\"calendar\")\r\n    }\r\n    return(\r\n        <header>\r\n            <img onClick={handleClick} src={LogoImg} alt=\"CrewBoard\"></img>\r\n            <nav>\r\n                <p>Some link</p>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nfunction Member(props) {\r\n    function handleClick(e){\r\n        e.stopPropagation()\r\n        props.callback(props.name)\r\n\r\n    }\r\n    return(\r\n        <p onClick={handleClick} className={props.selected ? \"member selected\" : \"member\"}>{props.name}</p>\r\n    )\r\n}\r\nexport default Member","import React from 'react'\r\n\r\nfunction Boat(props){\r\n    function handleClick(e){\r\n        e.stopPropagation()\r\n        props.callback(props.data)\r\n\r\n    }\r\n    var cssclasses = \"boat\"\r\n    if(props.selected){\r\n        cssclasses = cssclasses.concat(\" selected\")\r\n    }\r\n    if(props.increw){\r\n        cssclasses = cssclasses.concat(\" increw\")\r\n    }\r\n    return(\r\n        <div onClick={handleClick} className={cssclasses}>\r\n            <p>{props.data.name}</p>\r\n            <p>{props.data.class}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Boat","import React, { useState } from 'react'\r\nimport Member from './Member'\r\nimport Boat from './Boat'\r\n\r\nfunction MemberList(props) {\r\n    const [listActive, switchList] = useState(\"member\")\r\n    const members = props.members.map((item, i) => {\r\n        return (<Member\r\n            callback={props.memberclick}\r\n            key={i}\r\n            name={item}\r\n            selected={props.selected.includes(item)} />)\r\n    })\r\n\r\n    const boats = props.boats.map((boat,i) => {\r\n        return (\r\n            <Boat \r\n                key={i}\r\n                data={boat}\r\n                selected={props.boatselected.name === boat.name}\r\n                callback={props.boatclick}\r\n                increw={false}\r\n             />\r\n        )\r\n    })\r\n\r\n    function handleClick(e) {\r\n        props.listclick(\"memList\")\r\n    }\r\n    function listSwitch(e){\r\n        listActive === \"member\" ? switchList(\"boat\") : switchList(\"member\")\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleClick} className=\"member-list\">\r\n            <div className=\"list-titles\">\r\n\r\n                <div onClick={listSwitch} className={listActive === \"member\" ? \"active\":\"\"}>\r\n                    <h3>Member List</h3>\r\n                </div>\r\n\r\n                <div onClick={listSwitch} className={listActive === \"boat\" ? \"active\":\"\"}>\r\n                    <h3>Boat List</h3>\r\n                </div>\r\n\r\n            </div>\r\n            <p className=\"save-crews\" onClick={() => props.savecrews()}>Save Crews</p>\r\n            {listActive === \"member\" ? members : boats}\r\n        </div>\r\n    )\r\n}\r\nexport default MemberList","import React from 'react'\r\nimport Member from './Member'\r\nimport Boat from './Boat'\r\n\r\nfunction Crew(props){\r\n    function addMembers(event){\r\n        props.callback(props.id)\r\n        \r\n    }\r\n    const members = props.members.map((item, i) => {\r\n        return(<Member \r\n            key={i} \r\n            name={item} \r\n            callback={props.memberclick}\r\n            selected={props.selected.includes(item)}/>\r\n    )})\r\n    return(\r\n        <div onClick={addMembers} className=\"crew\">\r\n            <h3>{props.id}</h3>\r\n\r\n            {Object.getOwnPropertyNames(props.boat).length === 0 ? \r\n                \"\" :\r\n                <Boat \r\n                    data={props.boat}\r\n                    selected={props.boatselected.name === props.boat.name}\r\n                    callback={props.boatclick}\r\n                    increw={true}\r\n                />\r\n            }\r\n            {members}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Crew","import React from 'react'\r\n\r\nimport Crew from './Crew'\r\n\r\nfunction CrewList(props){\r\n    const crew_list = props.crews.map((crew, i) => {\r\n        return(\r\n            <Crew \r\n                key={i} \r\n                id={crew.id} \r\n                callback={props.callback} \r\n                members={crew.members} \r\n                memberclick={props.memberclick} \r\n                selected={props.selected} \r\n                boat={crew.boat} \r\n                boatselected={props.boatselected}\r\n                boatclick={props.boatclick}\r\n            />\r\n        )}\r\n    )\r\n    function handleClick(e){\r\n        props.addcrew()\r\n    }\r\n    \r\n    return(\r\n        <div className=\"crew-list\">\r\n            {crew_list}\r\n            <div><h2 onClick={handleClick}className=\"add-crew\">+</h2></div>\r\n        </div>\r\n    )\r\n}\r\nexport default CrewList","import React, { useState, useEffect } from 'react'\r\nimport MemberList from './MemberList'\r\nimport CrewList from './CrewList'\r\n\r\nfunction CrewMaker(props) {\r\n    const [memberList, updateMemberList] = useState([])\r\n    const [ boatList, updateBoatList ] = useState([\r\n        {name: \"David James\",class: 1},\r\n        {name: \"Steven Mayo Smith\",class: 1},\r\n        {name: \"Sweetmans\", class: 4},\r\n        {name: \"Richard Dykes\", class: 2},\r\n        {name: \"Drury\", class: 4},\r\n        {name: \"Kelsey Bevan\", class: 2},\r\n        {name: \"Noel Playle II\",class:  8},\r\n        {name: \"Millet Moore\", class: 8}\r\n    ])\r\n    const [selected, updateSelected] = useState([])\r\n    const [boatSelected, updateBoatSelected] = useState({})\r\n    const [crews, updateCrews] = useState([\r\n        { id: 1, members: [], boat: {}},\r\n        { id: 2, members: [], boat: {} }\r\n    ])\r\n\r\n    //Fetch Members of selected squad\r\n    useEffect(() => {\r\n        fetch(`https://nameless-garden-05700.herokuapp.com/api/member?squad=${props.squad}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                data = data.map(member => `${member.firstName} ${member.lastName.substring(0,1)}`)\r\n                updateMemberList(data)\r\n            })\r\n    }, [])\r\n\r\n    function boatSelect(boat){\r\n        boatSelected === boat ? \r\n            updateBoatSelected({}):\r\n            updateBoatSelected(boat)\r\n    }\r\n\r\n\r\n\r\n    function handleSelect(member_name) {\r\n        if (!selected.includes(member_name)) {\r\n            updateSelected(prevState => [...prevState, member_name])\r\n        } else {\r\n            updateSelected(prevState => prevState.filter(item => {\r\n                return item !== member_name\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n    function addMembers(crew_id) {\r\n        //Attempt adding selected to crews\r\n        const my_crews = crews.map(item => item)\r\n        if (crew_id !== \"memList\") {\r\n            my_crews.forEach(crew => {\r\n                if (crew.id === crew_id) {\r\n                    selected.forEach(name => {\r\n                        if (!crew.members.includes(name)) {\r\n                            crew.members.push(name)\r\n                        }\r\n                    })\r\n                    if(Object.getOwnPropertyNames(crew.boat).length === 0){\r\n\r\n                        crew.boat = boatSelected\r\n                        //Get boat out of boatlist\r\n                        if (crew_id !== \"memList\") {\r\n                            updateBoatList(prevState => prevState.filter(boat => {\r\n                                return boat !== boatSelected\r\n                            }))\r\n                        }\r\n                        //Get selected boat out of other crews\r\n                        my_crews.forEach(crew => {\r\n                            if(crew.id !== crew_id){\r\n                                if(crew.boat.name === boatSelected.name){\r\n                                    crew.boat = {}\r\n                                }\r\n                            }\r\n                        })\r\n                        updateBoatSelected({})\r\n                    }\r\n                }\r\n            })\r\n        } else {//Add memebers back to member list\r\n            const newMemList = memberList.map(item => item)\r\n            selected.forEach(mem => {\r\n                if(!newMemList.includes(mem)){\r\n                    newMemList.push(mem)\r\n                }\r\n            })\r\n            updateMemberList(newMemList)\r\n            \r\n            if(Object.getOwnPropertyNames(boatSelected).length !== 0){\r\n                if(!boatList.includes(boatSelected)){\r\n                    const newBoatList = boatList.map(boat => boat)\r\n                    newBoatList.push(boatSelected)\r\n                    updateBoatList(newBoatList)\r\n                    my_crews.forEach(crew => {\r\n                        if(crew.id !== crew_id){\r\n                            if(crew.boat.name === boatSelected.name){\r\n                                crew.boat = {}\r\n                            }\r\n                        }\r\n                    })\r\n                    updateBoatSelected({})\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        //Get selected out of memberlist\r\n        selected.forEach(item => {\r\n            if (crew_id !== \"memList\") {\r\n                updateMemberList(prevState => prevState.filter(member => {\r\n                    return member !== item\r\n                }))\r\n            }\r\n            //Get selected out of crewlist by checking every crew list except the one you're\r\n            //trying to add to\r\n            my_crews.forEach(crew => {\r\n                if (crew.id !== crew_id) {\r\n                    var new_crew = []\r\n                    crew.members.forEach((member, i) => {\r\n                        if (!selected.includes(member)) {\r\n                            new_crew.push(member)\r\n                        }\r\n                    })\r\n                    crew.members = new_crew\r\n                }\r\n            })\r\n\r\n        })\r\n        \r\n        //Add selected to given crew\r\n        updateCrews(my_crews)\r\n\r\n        updateSelected([])\r\n        \r\n    }\r\n\r\n    function addCrew() {\r\n        const my_crews = crews.map(item => item)\r\n        my_crews.push({ id: my_crews.length + 1, members: [], boat: {} })\r\n        updateCrews(my_crews)\r\n    }\r\n\r\n    function saveCrews(){\r\n        const data_to_send = {training_id: props.training.id,crews: crews}\r\n        console.log(data_to_send)\r\n\r\n        fetch('https://nameless-garden-05700.herokuapp.com/api/training/addcrews', {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data_to_send)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <MemberList \r\n                        boats={boatList} \r\n                        members={memberList} \r\n                        memberclick={handleSelect} \r\n                        selected={selected} \r\n                        boatselected={boatSelected}\r\n                        listclick={addMembers} \r\n                        boatclick={boatSelect}\r\n                        savecrews={saveCrews}\r\n            />\r\n            \r\n            <CrewList \r\n                        crews={crews} \r\n                        callback={addMembers} \r\n                        memberclick={handleSelect} \r\n                        selected={selected} \r\n                        boatselected={boatSelected}\r\n                        addcrew={addCrew} \r\n                        boatclick={boatSelect}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrewMaker","import React from 'react'\r\nimport TrainingsIcon from '../images/trainings.svg'\r\nimport EventsIcon from '../images/events.svg'\r\nimport RegattasIcon from '../images/regattas.svg'\r\nimport SettingsIcon from '../images/settings.svg'\r\n\r\nfunction SidePanel(props){\r\n\r\n    // const [squads, updateSquads] = useState([])\r\n\r\n\r\n    const squad_names = props.squads.map((squad,i) =>{\r\n        return <p \r\n                    key={i} \r\n                    onClick={() => props.updateSquad(squad)}\r\n                    className={props.currentSquad === squad ? \"list-active\": \"\"}\r\n                >\r\n                    {squad}\r\n                </p>\r\n    })\r\n    return(\r\n        <div className=\"side-panel\">\r\n            <div className=\"side-panel-list\">\r\n                <h2 className=\"active\" onClick={() => {\r\n                    props.updateSquad(\"all\")\r\n                    props.panelUpdate(\"trainings\")\r\n                    }\r\n                }>\r\n                    <img src={TrainingsIcon} className=\"list-icon\" alt=\"Trainiing Icon\"></img>\r\n                    Trainings\r\n                </h2>\r\n                <div className=\"side-panel-sublist\">\r\n                    {squad_names}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"side-panel-list\">\r\n                <h2>\r\n                    <img src={RegattasIcon} className=\"list-icon\" alt=\"Regattas Icon\"></img>\r\n                    Regattas</h2>\r\n            </div>\r\n\r\n            <div className=\"side-panel-list\">\r\n                <h2>\r\n                    <img src={EventsIcon} className=\"list-icon\" alt=\"Events Icon\"></img>\r\n                    Events</h2>\r\n            </div>\r\n\r\n            <div className=\"side-panel-list\">\r\n                <h2 onClick={() => props.panelUpdate(\"settings\")}>\r\n                    <img src={SettingsIcon} className=\"list-icon\" alt=\"Settings Icon\"></img>\r\n                    Settings</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SidePanel","import React from 'react'\r\n//For the Crews list on the calendar page\r\nfunction Crews(props) {\r\n    let crews_display = <p>No Crews</p>\r\n    if (props.crews) {\r\n        crews_display = props.crews.map((crew,i) => {\r\n            let boat = \"No Boat\"\r\n            //If crew.boat isn't undefined, then assign the string to boat\r\n            if(crew.boat !== undefined){\r\n                if(!(Object.entries(crew.boat).length === 0 && crew.boat.constructor === Object)) {\r\n                    boat = crew.boat.name\r\n                }\r\n            }\r\n            \r\n            if(crew.members.length === 0) return\r\n            return (\r\n                <div key={i} className=\"crew-item\">\r\n                    {crew.members.map((mem, j)=> <p key={j} className=\"crew-member\">{mem}</p>)}\r\n                    <p className=\"boat-item\">{boat}</p>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return <div>{crews_display}</div>\r\n\r\n}\r\n\r\nexport default Crews\r\n\r\n\r\n    // < div key = { i } className = \"crew-item\" > {\r\n    //     crew.members.map((member, j) => <p className=\"crew-member\" key={j}>{member}</p>)\r\n\r\n    // }\r\n    //     < p className = \"boat-item\" > { boat }</p >\r\n    //     </div >","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nfunction AddMember(props) {\r\n\r\n    const [firstName, updateFirstName] = useState(\"\")\r\n    const [lastName, updateLastName] = useState(\"\")\r\n    const [squad, updateSquad] = useState(\"all\")\r\n\r\n    const [errors, updateErrors] = useState([])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        updateErrors([])\r\n        console.log(\"trying to submit\")\r\n\r\n        if(firstName === \"\" || lastName === \"\"){\r\n            updateErrors(prevState => {\r\n                const newErrors = prevState\r\n                newErrors.push(\"Fields must not be empty\")\r\n                return newErrors\r\n            })\r\n            return\r\n        }\r\n\r\n        const data_to_send = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            squad: squad\r\n        }\r\n\r\n        console.log(data_to_send)\r\n\r\n        fetch('https://nameless-garden-05700.herokuapp.com/api/member', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data_to_send)\r\n        })\r\n        .then(res => console.log(res))\r\n    }\r\n\r\n    function handleChange(e){\r\n        if(e.target.name === \"firstName\") updateFirstName(e.target.value)\r\n        else if(e.target.name === \"lastName\") updateLastName(e.target.value)\r\n        else if(e.target.name === \"squads\") updateSquad(e.target.value)\r\n    }\r\n    const squadsOptions = props.squads.map((squad,i) => {\r\n        return <option key={i} value={squad}>{squad}</option>\r\n    })\r\n    const errorsList = errors.map((error, i) => <li key={i}>{error}</li>)\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <ul className=\"errorsList\">\r\n                    {errorsList}\r\n                </ul>\r\n            <div className=\"form-element\">\r\n                <label>First Name</label>\r\n                <input name=\"firstName\" type=\"text\" onChange={handleChange}></input>\r\n            </div>\r\n            <div className=\"form-element\">\r\n                <label>Last Name</label>\r\n                <input name=\"lastName\" type=\"text\" onChange={handleChange}></input>\r\n            </div>\r\n            <select className=\"create-training-button\" value={squad} onChange={handleChange} name=\"squads\">\r\n                <option value=\"all\">All Squads</option>\r\n                {squadsOptions}\r\n            </select>\r\n            <br></br>\r\n            <input type=\"submit\" className=\"create-training-button\" value=\"Add Member\"/>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default AddMember","import React, { useState, useEffect } from 'react'\r\n\r\nfunction EditMember(props) {\r\n    const [firstName, updateFirstName] = useState(\"No Name\")\r\n    const [lastName, updateLastName] = useState(\"No Name\")\r\n\r\n    useEffect(() => {\r\n        updateFirstName(props.member.firstName)\r\n        updateLastName(props.member.lastName)\r\n\r\n\r\n\r\n\r\n    }, [])\r\n    function handleChange(e) {\r\n\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-member-container\">\r\n            <div className=\"edit-member-panel\">\r\n                <p className=\"close-button\" onClick={() => props.closePanel(null)}>X</p>\r\n                <h1>Edit Member</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-element\">\r\n                        <label>First Name</label>\r\n                        <input name=\"firstName\" type=\"text\" onChange={handleChange} value={firstName}></input>\r\n                    </div>\r\n                    <div className=\"form-element\">\r\n                        <label>Last Name</label>\r\n                        <input name=\"lastName\" type=\"text\" onChange={handleChange} value={lastName}></input>\r\n                    </div>\r\n\r\n                    <input className=\"create-training-button\" value=\"Save Changes\" type=\"submit\"></input>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMember","import React, { useState, useEffect } from 'react'\r\nimport EditMember from './EditMember'\r\n\r\nfunction FindMember(props) {\r\n\r\n    const [search, updateSearch] = useState()\r\n    const [searchedMembers, updateSearchedMembers] = useState([])\r\n    const [editMember, updateEditMember] = useState(null)\r\n\r\n    function handleChange(e) {\r\n        if (e.target.name === \"search\") {\r\n            updateSearch(e.target.value)\r\n        }\r\n\r\n\r\n    }\r\n    function deleteName(id){\r\n        fetch('/api/member/delete', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id: id})\r\n        })\r\n        .then(res => res.json())\r\n    }\r\n    useEffect(() => {\r\n        fetch('/api/member/search', {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({search: search})\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            updateSearchedMembers(data)\r\n        })\r\n        console.log(searchedMembers)\r\n    }, [search])\r\n\r\n    return (\r\n        <div className=\"form-element\">\r\n            {editMember !== null ? <EditMember member={editMember} closePanel={updateEditMember}/> : false}\r\n            <h3>Search Members</h3>\r\n            <input name=\"search\" className=\"search-bar\" onChange={handleChange} />\r\n            <div className=\"members-search\">\r\n                {searchedMembers.map((member,i) => <div className=\"members-search-item\" key={i}>\r\n                    <p>{`${member.firstName} ${member.lastName}`}</p>\r\n                    <div className=\"members-search-item-buttons\">\r\n                        <p onClick={() => updateEditMember(member)}>Edit</p>\r\n                        <p onClick={(e) => { \r\n                            if (window.confirm('Are you sure you wish to delete this item?')) {\r\n                                deleteName(member._id)\r\n                                updateSearchedMembers(prevState => prevState.filter(mem => mem._id !== member._id))\r\n                            }\r\n                             } }>Delete</p>\r\n                    </div>\r\n            </div>)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FindMember","import React from 'react'\r\nimport convertDate from '../scripts/convertToDate'\r\n\r\n\r\nfunction DateItem(props) {\r\n\r\n    var colorCode = \"#fcba03\"\r\n    if(props.colour === \"blue\")colorCode = \"#483bff\"\r\n    else if(props.colour === \"red\")colorCode = \"#e22113\"\r\n    else if(props.colour === \"green\")colorCode = \"#46dd0b\"\r\n    else if(props.colour === \"yellow\")colorCode = \"#ffeb3b\"\r\n\r\n    return(\r\n        <div className=\"date-item\" onClick={props.onClick}>\r\n            <div className=\"color-code\" style={{\"background\": colorCode}}></div>\r\n            <div className=\"date-content\">\r\n                <p>{convertDate(props.date)} <span className=\"squad-name-sm\">{props.squad}</span></p>\r\n                <p>{props.name}</p>\r\n                <p>{props.location}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateItem","import React, { useState } from 'react'\r\nimport convertDate from '../scripts/convertToDate'\r\nimport compareWeek from '../scripts/findWeek'\r\nimport Crews from './Crews'\r\nimport AddMemeber from './AddMember'\r\nimport FindMemeber from './FindMember'\r\n\r\nimport DateItem from './DateItem'\r\n\r\nfunction MainPanel(props) {\r\n\r\n    const [infoPanelDisplay, updateInfoPanelDisplay] = useState(false)\r\n    const [AddMemberDropDown, updateAddMemberDropDown] = useState(false)\r\n    const [FindMemberDropDown, updateFindMemberDropDown] = useState(false)\r\n\r\n    const trainingList = props.trainings.map((training, i) => {\r\n        return (\r\n            <DateItem\r\n                key={training._id}\r\n                name={training.name}\r\n                date={training.date}\r\n                colour={training.colour}\r\n                location={training.location}\r\n                squad={training.squad}\r\n                onClick={() => {\r\n                    props.handleClick(\r\n                        \"current-training\",\r\n                        {\r\n                            name: training.name,\r\n                            date: training.date,\r\n                            desc: training.description,\r\n                            location: training.location,\r\n                            startTime: training.startTime,\r\n                            endTime: training.endTime,\r\n                            squad: training.squad,\r\n                            id: training._id,\r\n                            crews: training.crews\r\n                        }\r\n                    )\r\n                    //This was for when Info Panel wasn't fixed\r\n                    // window.scrollTo({\r\n                    //     top: 0,\r\n                    //     left: 0,\r\n                    //     behavior: \"smooth\"\r\n                    // })\r\n                    updateInfoPanelDisplay(true)\r\n                }}\r\n            />\r\n        )\r\n    })\r\n\r\n    trainingList.sort((a, b) => new Date(a.props.date) - new Date(b.props.date))\r\n\r\n    if (props.currentPanel == \"trainings\") {\r\n        return (\r\n            <div className=\"main-panel\">\r\n                <div className=\"dates-list-container\">\r\n                    <h1>Upcoming Training</h1>\r\n\r\n                    <div className=\"dates-list rounded-top\">\r\n                        <div\r\n                            className=\"create-training-button\"\r\n                            name=\"create-training\"\r\n                            onClick={(e) => props.handleClick(\"create-training\")}\r\n                        >\r\n                            <p>Create Training</p>\r\n                        </div>\r\n                        <h3>Today</h3>\r\n                        {trainingList.filter(train => convertDate(train.props.date) === convertDate(Date.now()))}\r\n                        <h3>This Week</h3>\r\n                        {trainingList.filter(train => compareWeek(train.props.date, Date.now()))}\r\n                        <h3>All</h3>\r\n                        {trainingList.filter(train => Date.parse(train.props.date) > Date.now())}\r\n                    </div>\r\n                </div>\r\n                <div className={\r\n                    infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\"\r\n                }>\r\n                    <div className=\"info-panel-container-head\">\r\n                        <h1>Details</h1>\r\n                        <p className=\"close-button hide-desktop\" onClick={() => updateInfoPanelDisplay(false)}>X</p>\r\n                    </div>\r\n                    <div className=\"info-panel rounded-top\">\r\n\r\n                        {!props.currentTraining.name ? \"Select a training to display its information\" :\r\n                            <div>\r\n                                <div className=\"info-panel-head\">\r\n                                    <h1>{props.currentTraining.name}</h1>\r\n                                    <p>{convertDate(props.currentTraining.date)}</p>\r\n                                </div>\r\n                                <p className=\"info-panel-time\">{`${props.currentTraining.startTime} - ${props.currentTraining.endTime}`}</p>\r\n                                <p>{props.currentTraining.desc}</p>\r\n                                <p className=\"info-panel-location\">Location: {props.currentTraining.location}</p>\r\n\r\n                                <div className=\"info-panel-crews-head\">\r\n                                    <h2 className=\"info-panel-crews\">Crews</h2>\r\n                                    <p\r\n                                        className=\"create-training-button\"\r\n                                        name=\"create-training\"\r\n                                        onClick={(e) => props.pageupdate(\"crew-maker\", props.currentTraining, props.currentTraining.squad)}>Create Crews</p>\r\n                                </div>\r\n                                <div className=\"info-panel-seperator\"></div>\r\n                                <div className=\"info-panel-crew-list\">\r\n                                    <Crews crews={props.currentTraining.crews} />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }else if(props.currentPanel == \"settings\"){\r\n        function handleSubmit(e){\r\n\r\n        }\r\n        return(\r\n                <div className=\"settings-panel-container\">\r\n                    <h1>Settings</h1>\r\n                    <div className=\"seperator\"></div>\r\n                    <div className=\"settings-panel\">\r\n                        <h2>Account</h2>\r\n                        <p className=\"create-training-button\">Change Password</p><br></br>\r\n                        <p className=\"create-training-button\">Change User Name</p>\r\n\r\n                        <h2>Member Management</h2>\r\n                        <p className=\"form-drop-down\" onClick={() => updateAddMemberDropDown(prevState => !prevState)}>Add Member &#9207;</p>\r\n                        {AddMemberDropDown ? <AddMemeber squads={props.squads}/> : false}<br></br>\r\n                        <p className=\"form-drop-down\" onClick={() => updateFindMemberDropDown(prevState => !prevState)}>Find Members &#9207;</p>\r\n                        {FindMemberDropDown ? <FindMemeber /> : false}<br></br>\r\n\r\n                        <h2>Team Management</h2>\r\n\r\n                        <h2>Help & Support</h2>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default MainPanel","import React, { useState, useEffect } from 'react'\r\n\r\nfunction CreateTraining(props) {\r\n\r\n    const [name, updateName] = useState(\"\")\r\n    const [desc, updateDesc] = useState(\"\")\r\n    const [location, updateLocation] = useState(\"\")\r\n    const [date, updateDate] = useState(\"\")\r\n    const [endDate, updateEndDate] = useState(\"\")\r\n    const [start_time, updateStartTime] = useState(\"\")\r\n    const [end_time, updateEndTime] = useState(\"\")\r\n    const [recurring, updateRecurring] = useState(false)\r\n    const [colour, updateColour] = useState(\"blue\")\r\n    const [squad, updateSquad] = useState(props.squad)\r\n\r\n    const [errors, updateErrors] = useState([])\r\n\r\n    useEffect(() => {\r\n        updateSquad(props.squad)\r\n    }, [])\r\n\r\n    function handleChange(e) {\r\n        if (e.target.name === \"name\") updateName(e.target.value)\r\n        else if (e.target.name === \"desc\") updateDesc(e.target.value)\r\n        else if (e.target.name === \"location\") updateLocation(e.target.value)\r\n        else if (e.target.name === \"date\") updateDate(e.target.value)\r\n        else if (e.target.name === \"endDate\") updateEndDate(e.target.value)\r\n        else if (e.target.name === \"startTime\") updateStartTime(e.target.value)\r\n        else if (e.target.name === \"endTime\") updateEndTime(e.target.value)\r\n        else if (e.target.name === \"recurring\") updateRecurring(!recurring)\r\n        else if (e.target.name === \"colour\") updateColour(e.target.value)\r\n        else if (e.target.name === \"squads\") updateSquad(e.target.value)\r\n\r\n        if(!recurring)updateEndDate(prevState => date)\r\n\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        updateErrors([])\r\n\r\n        \r\n        if (endDate < date && recurring) {\r\n            updateErrors(prevState => {\r\n                const newErrors = prevState\r\n                newErrors.push(\"End Date must be later than Date.\")\r\n                return newErrors\r\n            })\r\n            return\r\n        }\r\n        if(end_time < start_time){\r\n            updateErrors(prevState => {\r\n                const newErrors = prevState\r\n                newErrors.push(\"End Time must be later than Start Time.\")\r\n                return newErrors\r\n            })\r\n            return\r\n        }\r\n        if(name === \"\" || desc === \"\" || start_time === \"\" || end_time === \"\" || date === \"\" || location === \"\"){\r\n            updateErrors(prevState => {\r\n                const newErrors = prevState\r\n                newErrors.push(\"Fields must not be empty\")\r\n                return newErrors\r\n            })\r\n            return\r\n        }\r\n\r\n        const data_to_send = {\r\n            name: name,\r\n            desc: desc,\r\n            location: location,\r\n            date: date,\r\n            endDate: endDate,\r\n            startTime: start_time,\r\n            endTime: end_time,\r\n            recurring: recurring,\r\n            colour: colour,\r\n            squad: squad\r\n        }\r\n\r\n        console.log(data_to_send)\r\n        fetch('https://nameless-garden-05700.herokuapp.com/api/training', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data_to_send)\r\n        })\r\n            .then(res => console.log(res))\r\n            .then(props.display(prevState => !prevState))\r\n\r\n    }\r\n    const recurringInput = (\r\n        <div className=\"create-training-input-wrapper\">\r\n            <label>End Date</label>\r\n            <input name=\"endDate\" type=\"date\" value={endDate} onChange={handleChange} />\r\n        </div>\r\n    )\r\n\r\n    const errorsList = errors.map((error, i) => <li key={i}>{error}</li>)\r\n    const squadsOptions = props.squads.map((squad,i) => {\r\n        return <option key={i} value={squad}>{squad}</option>\r\n    })\r\n    return (\r\n        <div className=\"create-training-container\">\r\n            <div className=\"create-training-box\">\r\n                <p className=\"close-button\" onClick={e => props.display(prevState => !prevState)}>X</p>\r\n                <h1>Create Training</h1>\r\n                <ul className=\"errorsList\">\r\n                    {errorsList}\r\n                </ul>\r\n                <form onSubmit={handleSubmit}>\r\n                    <select className=\"create-training-button\" value={squad} onChange={handleChange} name=\"squads\">\r\n                        <option value=\"all\">All Squads</option>\r\n                        {squadsOptions}\r\n                    </select>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Training Name</label>\r\n                        <input name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder=\"e.g. On Water\"/>\r\n                    </div>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Description</label>\r\n                        <input name=\"desc\" type=\"text\" value={desc} onChange={handleChange} placeholder=\"e.g. Bring shoes incase of weather\"/>\r\n                    </div>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Location</label>\r\n                        <input name=\"location\" type=\"text\" value={location} onChange={handleChange} placeholder=\"e.g. Boat House\" />\r\n                    </div>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Date</label>\r\n                        <input name=\"date\" type=\"date\" value={date} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Recurring Training</label>\r\n                        <input name=\"recurring\" type=\"checkbox\" checked={recurring} onChange={handleChange} />\r\n                    </div>\r\n                    {recurring ? recurringInput : null}\r\n\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Start Time</label>\r\n                        <input name=\"startTime\" type=\"time\" value={start_time} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>End Time</label>\r\n                        <input name=\"endTime\" type=\"time\" value={end_time} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"create-training-input-wrapper\">\r\n                        <label>Label Colour</label>\r\n                        <div className=\"create-training-colours\">\r\n                            <div className={`create-training-colour blue ${colour === \"blue\" ? \"active\" : \"\"}`} value=\"blue\" onClick={() => updateColour(\"blue\")}></div>\r\n                            <div className={`create-training-colour green ${colour === \"green\" ? \"active\" : \"\"}`} value=\"red\" onClick={() => updateColour(\"green\")}></div>\r\n                            <div className={`create-training-colour red ${colour === \"red\" ? \"active\" : \"\"}`} value=\"green\" onClick={() => updateColour(\"red\")}></div>\r\n                            <div className={`create-training-colour yellow ${colour === \"yellow\" ? \"active\" : \"\"}`} value=\"yellow\" onClick={() => updateColour(\"yellow\")}></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input className=\"create-training-button\" type=\"submit\" value=\"Save Training\" />\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateTraining","import React, { useState, useEffect } from 'react'\r\nimport '../styles/calendar.css'\r\n\r\nimport SidePanel from './SidePanel'\r\nimport MainPanel from './MainPanel'\r\nimport CreateTraining from './CreateTraining'\r\n\r\nfunction Calendar(props) {\r\n    const [createTraining, updateCreateTraining] = useState(false)\r\n    const [currentSquad, updateCurrentSquad] = useState(\"all\")\r\n    const [ squads, updateSquads ] = useState([])\r\n    const [trainings, updateTrainings] = useState([])\r\n    const [currentTraining, updateCurrentTraining] = useState({})\r\n    const [currentPanel, updateCurrentPanel] = useState(\"trainings\")\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://nameless-garden-05700.herokuapp.com/api/squads')\r\n            .then(res => res.json())\r\n            .then(data => updateSquads(data))\r\n\r\n    }, [])\r\n    //Update when createTraining window closes\r\n    useEffect(() => {\r\n        fetch(`https://nameless-garden-05700.herokuapp.com/api/training/?squad=${currentSquad}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                updateTrainings(data)\r\n            })\r\n    }, [createTraining])\r\n\r\n    //Update when currentSquad changes\r\n    useEffect(() => {\r\n        fetch(`https://nameless-garden-05700.herokuapp.com/api/training/?squad=${currentSquad}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                updateTrainings(data)\r\n            })\r\n            updateCurrentTraining({})\r\n    }, [currentSquad])\r\n\r\n    function handleClick(name,data) {\r\n        if (name === \"create-training\") {\r\n            updateCreateTraining(true)\r\n        }\r\n        else if(name === \"current-training\") {\r\n            updateCurrentTraining(data)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        // style={{backgroundImage: `url(${Background})`}}\r\n        <div className=\"calendar-wrapper\" >\r\n            <SidePanel \r\n                updateSquad={updateCurrentSquad} \r\n                squads={squads} \r\n                currentSquad={currentSquad} \r\n                panelUpdate={updateCurrentPanel}\r\n            />\r\n            <div></div>\r\n            <MainPanel \r\n                trainings={trainings} \r\n                pageupdate={props.pageupdate} \r\n                handleClick={handleClick}\r\n                currentTraining={currentTraining}\r\n                currentPanel={currentPanel}\r\n                squads={squads}\r\n            />\r\n            {createTraining ? <CreateTraining \r\n                                    display={updateCreateTraining} \r\n                                    squad={currentSquad} \r\n                                    squads={squads} \r\n                                     /> : false}\r\n        </div>\r\n    )\r\n}\r\nexport default Calendar","import React, {useState} from 'react';\r\n\r\nimport Header from './Header'\r\nimport CrewMaker from './CrewMaker'\r\nimport Calendar from './Calendar'\r\n\r\nfunction App() {\r\n\t//Pages:\r\n\t//- calendar\r\n\t//- crew-maker\r\n\tconst [page, updatePage] = useState(\"calendar\")\r\n\tconst [selectedTraining, updateSelectedTraining] = useState({})\r\n\tconst [selectedSquad, updateSelectedSquad] = useState([])\r\n\tfunction changePage(toPage,training = null,squad = null){\r\n\t\tif(toPage === 'calendar'){\r\n\t\t\tupdatePage('calendar')\r\n\t\t}else if (toPage === \"crew-maker\"){\r\n\t\t\tupdateSelectedSquad(squad)\r\n\t\t\tupdateSelectedTraining(training)\r\n\t\t\tupdatePage('crew-maker')\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header page={page} pageupdate={updatePage}/>\r\n\t\t\t<div className=\"header-spacer\"></div>\r\n\t\t\t{page === \"crew-maker\" ? <CrewMaker squad={selectedSquad} training={selectedTraining} pageupdate={changePage}/>:null}\r\n\t\t\t{page === \"calendar\" ? <Calendar pageupdate={changePage}/>:null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}