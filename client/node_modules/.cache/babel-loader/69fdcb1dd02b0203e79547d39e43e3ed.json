{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\src\\\\CrewMaker.js\";\nimport React, { useState } from 'react';\nimport Member from './Member';\nimport MemberList from './MemberList';\nimport CrewList from './CrewList';\n\nfunction CrewMaker() {\n  const _useState = useState([\"Jenna\", \"Sophie\", \"Grace\", \"Isobel\", \"Chloe\", \"Kiwa\", \"Kate\", \"Danielle\"]),\n        _useState2 = _slicedToArray(_useState, 2),\n        memberList = _useState2[0],\n        updateMemberList = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selected = _useState4[0],\n        updateSelected = _useState4[1];\n\n  const _useState5 = useState([{\n    id: 1,\n    members: []\n  }, {\n    id: 2,\n    members: []\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        crews = _useState6[0],\n        updateCrews = _useState6[1];\n\n  function handleSelect(member_name) {\n    if (!selected.includes(member_name)) {\n      updateSelected(prevState => [...prevState, member_name]);\n    } else {\n      updateSelected(prevState => prevState.filter(item => {\n        return item !== member_name;\n      }));\n    }\n  }\n\n  function addMembers(crew_id) {\n    //Attempt adding selected to crews\n    if (crew_id == \"select\") {\n      console.log(\"rawr\");\n    }\n\n    const my_crews = crews.map(item => item);\n    my_crews.forEach(crew => {\n      if (crew.id == crew_id) {\n        selected.forEach(name => {\n          if (!crew.members.includes(name)) {\n            crew.members.push(name);\n          }\n        });\n      }\n    }); //Get selected out of memberlist\n\n    selected.forEach(item => {\n      updateMemberList(prevState => prevState.filter(member => {\n        return member !== item;\n      })); //Get selected out of crewlist by checking every crew list except the one you're\n      //trying to add to\n\n      my_crews.forEach(crew => {\n        if (crew.id != crew_id) {\n          var new_crew = [];\n          crew.members.forEach((member, i) => {\n            if (!selected.includes(member)) {\n              new_crew.push(member);\n            }\n          });\n          crew.members = new_crew;\n        }\n      });\n    }); //Add selected to given crew\n\n    updateCrews(my_crews);\n    updateSelected([]);\n  }\n\n  function addCrew() {\n    const my_crews = crews.map(item => item);\n    my_crews.push({\n      id: my_crews.length + 1,\n      members: []\n    });\n    updateCrews(my_crews);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(MemberList, {\n    members: memberList,\n    memberclick: handleSelect,\n    selected: selected,\n    listclick: addMembers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(CrewList, {\n    crews: crews,\n    callback: addMembers,\n    memberclick: handleSelect,\n    selected: selected,\n    addcrew: addCrew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n}\n\nexport default CrewMaker;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\src\\CrewMaker.js"],"names":["React","useState","Member","MemberList","CrewList","CrewMaker","memberList","updateMemberList","selected","updateSelected","id","members","crews","updateCrews","handleSelect","member_name","includes","prevState","filter","item","addMembers","crew_id","console","log","my_crews","map","forEach","crew","name","push","member","new_crew","i","addCrew","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Member from './Member'\r\nimport MemberList from './MemberList'\r\nimport CrewList from './CrewList'\r\n\r\nfunction CrewMaker() {\r\n    const [memberList, updateMemberList] = useState([\r\n        \"Jenna\",\r\n        \"Sophie\",\r\n        \"Grace\",\r\n        \"Isobel\",\r\n        \"Chloe\",\r\n        \"Kiwa\",\r\n        \"Kate\",\r\n        \"Danielle\"\r\n    ])\r\n    const [selected, updateSelected] = useState([])\r\n    const [crews, updateCrews] = useState([\r\n        { id: 1, members: [] },\r\n        { id: 2, members: [] }\r\n    ])\r\n\r\n\r\n    function handleSelect(member_name) {\r\n        if (!selected.includes(member_name)) {\r\n            updateSelected(prevState => [...prevState, member_name])\r\n        } else {\r\n            updateSelected(prevState => prevState.filter(item => {\r\n                return item !== member_name\r\n            }))\r\n        }\r\n    }\r\n    function addMembers(crew_id) {\r\n        //Attempt adding selected to crews\r\n\r\n        if(crew_id == \"select\") {\r\n            console.log(\"rawr\")\r\n        }\r\n\r\n        const my_crews = crews.map(item => item)\r\n        my_crews.forEach(crew => {\r\n            if (crew.id == crew_id) {\r\n                selected.forEach(name => {\r\n                    if (!crew.members.includes(name)) {\r\n                        crew.members.push(name)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n\r\n        //Get selected out of memberlist\r\n        selected.forEach(item => {\r\n            updateMemberList(prevState => prevState.filter(member => {\r\n                return member !== item\r\n            }))\r\n            //Get selected out of crewlist by checking every crew list except the one you're\r\n            //trying to add to\r\n            my_crews.forEach(crew => {\r\n                if (crew.id != crew_id) {\r\n                    var new_crew = []\r\n                    crew.members.forEach((member, i) => {\r\n                        if (!selected.includes(member)) {\r\n                            new_crew.push(member)\r\n                        }\r\n                    })\r\n                    crew.members = new_crew\r\n                }\r\n            })\r\n\r\n        })\r\n        //Add selected to given crew\r\n        updateCrews(my_crews)\r\n\r\n        updateSelected([])\r\n    }\r\n\r\n    function addCrew(){\r\n        const my_crews = crews.map(item => item)\r\n        my_crews.push({id: my_crews.length+1, members: []})\r\n        updateCrews(my_crews)\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <MemberList members={memberList} memberclick={handleSelect} selected={selected} listclick={addMembers}/>\r\n            <CrewList crews={crews} callback={addMembers} memberclick={handleSelect} selected={selected} addcrew={addCrew}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrewMaker"]},"metadata":{},"sourceType":"module"}