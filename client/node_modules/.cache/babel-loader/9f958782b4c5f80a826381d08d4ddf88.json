{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\src\\\\components\\\\MainPanel.js\";\nimport React, { useState } from 'react';\nimport convertDate from '../scripts/convertToDate';\nimport compareWeek from '../scripts/findWeek';\nimport Crews from './Crews';\nimport DateItem from './DateItem';\n\nfunction MainPanel(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        infoPanelDisplay = _useState2[0],\n        updateInfoPanelDisplay = _useState2[1];\n\n  const trainingList = props.trainings.map((training, i) => {\n    return React.createElement(DateItem, {\n      key: training._id,\n      name: training.name,\n      date: training.date,\n      colour: training.colour,\n      location: training.location,\n      squad: training.squad,\n      onClick: () => {\n        props.handleClick(\"current-training\", {\n          name: training.name,\n          date: training.date,\n          desc: training.description,\n          location: training.location,\n          startTime: training.startTime,\n          endTime: training.endTime,\n          squad: training.squad,\n          id: training._id,\n          crews: training.crews\n        }); //This was for when Info Panel wasn't fixed\n        // window.scrollTo({\n        //     top: 0,\n        //     left: 0,\n        //     behavior: \"smooth\"\n        // })\n\n        updateInfoPanelDisplay(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  });\n  trainingList.sort((a, b) => new Date(a.props.date) - new Date(b.props.date));\n\n  if (props.currentPanel == \"trainings\") {\n    return React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dates-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Upcoming Training\"), React.createElement(\"div\", {\n      className: \"dates-list rounded-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-training-button\",\n      name: \"create-training\",\n      onClick: e => props.handleClick(\"create-training\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Create Training\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Today\"), trainingList.filter(train => convertDate(train.props.date) === convertDate(Date.now())), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"This Week\"), trainingList.filter(train => compareWeek(train.props.date, Date.now())), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"All\"), trainingList.filter(train => Date.parse(train.props.date) > Date.now()))), React.createElement(\"div\", {\n      className: infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info-panel-container-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"p\", {\n      className: \"close-button hide-desktop\",\n      onClick: () => updateInfoPanelDisplay(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"info-panel rounded-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, !props.currentTraining.name ? \"Select a training to display its information\" : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info-panel-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, props.currentTraining.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, convertDate(props.currentTraining.date))), React.createElement(\"p\", {\n      className: \"info-panel-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\".concat(props.currentTraining.startTime, \" - \").concat(props.currentTraining.endTime)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, props.currentTraining.desc), React.createElement(\"p\", {\n      className: \"info-panel-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Location: \", props.currentTraining.location), React.createElement(\"div\", {\n      className: \"info-panel-crews-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"info-panel-crews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Crews\"), React.createElement(\"p\", {\n      className: \"create-training-button\",\n      name: \"create-training\",\n      onClick: e => props.pageupdate(\"crew-maker\", props.currentTraining, props.currentTraining.squad),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Create Crews\")), React.createElement(\"div\", {\n      className: \"info-panel-seperator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"info-panel-crew-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Crews, {\n      crews: props.currentTraining.crews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))))));\n  } else if (props.currentPanel == \"settings\") {\n    return React.createElement(\"div\", {\n      className: \"settings-panel-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(\"div\", {\n      className: \"settings-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Account\"), React.createElement(\"p\", {\n      className: \"create-training-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(\"p\", {\n      className: \"create-training-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Change User Name\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Member Management\"), React.createElement(\"p\", {\n      className: \"create-training-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Add Member\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Team Management\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Help & Support\")));\n  }\n}\n\nexport default MainPanel;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\client\\src\\components\\MainPanel.js"],"names":["React","useState","convertDate","compareWeek","Crews","DateItem","MainPanel","props","infoPanelDisplay","updateInfoPanelDisplay","trainingList","trainings","map","training","i","_id","name","date","colour","location","squad","handleClick","desc","description","startTime","endTime","id","crews","sort","a","b","Date","currentPanel","e","filter","train","now","parse","currentTraining","pageupdate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport convertDate from '../scripts/convertToDate'\r\nimport compareWeek from '../scripts/findWeek'\r\nimport Crews from './Crews'\r\n\r\nimport DateItem from './DateItem'\r\n\r\nfunction MainPanel(props) {\r\n\r\n    const [infoPanelDisplay, updateInfoPanelDisplay] = useState(false)\r\n\r\n    const trainingList = props.trainings.map((training, i) => {\r\n        return (\r\n            <DateItem\r\n                key={training._id}\r\n                name={training.name}\r\n                date={training.date}\r\n                colour={training.colour}\r\n                location={training.location}\r\n                squad={training.squad}\r\n                onClick={() => {\r\n                    props.handleClick(\r\n                        \"current-training\",\r\n                        {\r\n                            name: training.name,\r\n                            date: training.date,\r\n                            desc: training.description,\r\n                            location: training.location,\r\n                            startTime: training.startTime,\r\n                            endTime: training.endTime,\r\n                            squad: training.squad,\r\n                            id: training._id,\r\n                            crews: training.crews\r\n                        }\r\n                    )\r\n                    //This was for when Info Panel wasn't fixed\r\n                    // window.scrollTo({\r\n                    //     top: 0,\r\n                    //     left: 0,\r\n                    //     behavior: \"smooth\"\r\n                    // })\r\n                    updateInfoPanelDisplay(true)\r\n                }}\r\n            />\r\n        )\r\n    })\r\n\r\n    trainingList.sort((a, b) => new Date(a.props.date) - new Date(b.props.date))\r\n\r\n    if (props.currentPanel == \"trainings\") {\r\n        return (\r\n            <div className=\"main-panel\">\r\n                <div className=\"dates-list-container\">\r\n                    <h1>Upcoming Training</h1>\r\n\r\n                    <div className=\"dates-list rounded-top\">\r\n                        <div\r\n                            className=\"create-training-button\"\r\n                            name=\"create-training\"\r\n                            onClick={(e) => props.handleClick(\"create-training\")}\r\n                        >\r\n                            <p>Create Training</p>\r\n                        </div>\r\n                        <h3>Today</h3>\r\n                        {trainingList.filter(train => convertDate(train.props.date) === convertDate(Date.now()))}\r\n                        <h3>This Week</h3>\r\n                        {trainingList.filter(train => compareWeek(train.props.date, Date.now()))}\r\n                        <h3>All</h3>\r\n                        {trainingList.filter(train => Date.parse(train.props.date) > Date.now())}\r\n                    </div>\r\n                </div>\r\n                <div className={\r\n                    infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\"\r\n                }>\r\n                    <div className=\"info-panel-container-head\">\r\n                        <h1>Details</h1>\r\n                        <p className=\"close-button hide-desktop\" onClick={() => updateInfoPanelDisplay(false)}>X</p>\r\n                    </div>\r\n                    <div className=\"info-panel rounded-top\">\r\n\r\n                        {!props.currentTraining.name ? \"Select a training to display its information\" :\r\n                            <div>\r\n                                <div className=\"info-panel-head\">\r\n                                    <h1>{props.currentTraining.name}</h1>\r\n                                    <p>{convertDate(props.currentTraining.date)}</p>\r\n                                </div>\r\n                                <p className=\"info-panel-time\">{`${props.currentTraining.startTime} - ${props.currentTraining.endTime}`}</p>\r\n                                <p>{props.currentTraining.desc}</p>\r\n                                <p className=\"info-panel-location\">Location: {props.currentTraining.location}</p>\r\n\r\n                                <div className=\"info-panel-crews-head\">\r\n                                    <h2 className=\"info-panel-crews\">Crews</h2>\r\n                                    <p\r\n                                        className=\"create-training-button\"\r\n                                        name=\"create-training\"\r\n                                        onClick={(e) => props.pageupdate(\"crew-maker\", props.currentTraining, props.currentTraining.squad)}>Create Crews</p>\r\n                                </div>\r\n                                <div className=\"info-panel-seperator\"></div>\r\n                                <div className=\"info-panel-crew-list\">\r\n                                    <Crews crews={props.currentTraining.crews} />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }else if(props.currentPanel == \"settings\"){\r\n        return(\r\n                <div className=\"settings-panel-container\">\r\n                    <h1>Settings</h1>\r\n                    <div className=\"settings-panel\">\r\n                        <h2>Account</h2>\r\n                        <p className=\"create-training-button\">Change Password</p>\r\n                        <p className=\"create-training-button\">Change User Name</p>\r\n\r\n                        <h2>Member Management</h2>\r\n                        <p className=\"create-training-button\">Add Member</p>\r\n                        \r\n                        <h2>Team Management</h2>\r\n\r\n                        <h2>Help & Support</h2>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default MainPanel"]},"metadata":{},"sourceType":"module"}