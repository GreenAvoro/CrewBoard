{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\src\\\\CrewMaker.js\";\nimport React, { useState } from 'react';\nimport Member from './Member';\nimport MemberList from './MemberList';\nimport CrewList from './CrewList';\n\nfunction CrewMaker() {\n  const _useState = useState([\"Jenna\", \"Sophie\", \"Grace\", \"Isobel\", \"Chloe\", \"Kiwa\", \"Kate\"]),\n        _useState2 = _slicedToArray(_useState, 2),\n        memberList = _useState2[0],\n        updateMemberList = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selected = _useState4[0],\n        updateSelected = _useState4[1];\n\n  const _useState5 = useState([{\n    id: 1,\n    members: []\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        crews = _useState6[0],\n        updateCrews = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selecting = _useState8[0],\n        changeSelecting = _useState8[1];\n\n  function handleSelect(member_name) {\n    if (!selected.includes(member_name)) {\n      updateSelected(prevState => [...prevState, member_name]);\n      console.log(\"added\");\n    } else {\n      updateSelected(prevState => prevState.filter(item => {\n        return item !== member_name;\n      }));\n    }\n\n    changeSelecting(true);\n    console.log(selected);\n  }\n\n  function addMembers(crew_id) {\n    //Attempt adding selected to crews\n    if (selecting) {\n      return;\n    }\n\n    console.log(\"adding crews\");\n    const my_crews = crews.map(item => item);\n    my_crews.forEach(crew => {\n      if (crew.id == crew_id) {\n        selected.forEach(name => {\n          if (!crew.members.includes(name)) {\n            crew.members.push(name);\n          }\n        });\n      }\n    }); //Add selected to given crew\n\n    updateCrews(my_crews); //Get selected out of memberlist\n\n    selected.forEach(item => {\n      updateMemberList(prevState => prevState.filter(member => {\n        return member !== item;\n      }));\n    });\n    updateSelected([]);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MemberList, {\n    members: memberList,\n    memberclick: handleSelect,\n    selected: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(CrewList, {\n    crews: crews,\n    callback: addMembers,\n    memberclick: handleSelect,\n    selected: selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}\n\nexport default CrewMaker;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\src\\CrewMaker.js"],"names":["React","useState","Member","MemberList","CrewList","CrewMaker","memberList","updateMemberList","selected","updateSelected","id","members","crews","updateCrews","selecting","changeSelecting","handleSelect","member_name","includes","prevState","console","log","filter","item","addMembers","crew_id","my_crews","map","forEach","crew","name","push","member"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Member from './Member'\r\nimport MemberList from './MemberList'\r\nimport CrewList from './CrewList'\r\n\r\nfunction CrewMaker() {\r\n    const [ memberList, updateMemberList ] = useState([\r\n        \"Jenna\",\r\n        \"Sophie\",\r\n        \"Grace\",\r\n        \"Isobel\",\r\n        \"Chloe\",\r\n        \"Kiwa\",\r\n        \"Kate\"\r\n    ]) \r\n    const [selected, updateSelected ] = useState([])\r\n    const [crews, updateCrews ] = useState([{id: 1, members: []}])\r\n    const [selecting, changeSelecting] = useState(false)\r\n\r\n    function handleSelect(member_name){\r\n        if(!selected.includes(member_name)){\r\n            updateSelected(prevState => [...prevState, member_name])\r\n            console.log(\"added\")\r\n        }else{\r\n            updateSelected(prevState => prevState.filter(item => {\r\n                return item !== member_name\r\n            }))\r\n        }\r\n        changeSelecting(true)\r\n        console.log(selected)\r\n    }\r\n    function addMembers(crew_id){\r\n        //Attempt adding selected to crews\r\n        if(selecting){return}\r\n        console.log(\"adding crews\")\r\n        const my_crews = crews.map(item => item)\r\n        my_crews.forEach(crew => {\r\n            if(crew.id == crew_id){\r\n                selected.forEach(name => {\r\n                    if(!crew.members.includes(name)){\r\n                        crew.members.push(name)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        //Add selected to given crew\r\n        updateCrews(my_crews)\r\n\r\n        //Get selected out of memberlist\r\n        selected.forEach(item => {\r\n            updateMemberList(prevState => prevState.filter(member => {\r\n                return member !== item\r\n            }))\r\n        })\r\n        \r\n        \r\n        updateSelected([])\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <MemberList members={memberList} memberclick={handleSelect} selected={selected}/>\r\n            <CrewList crews={crews} callback={addMembers} memberclick={handleSelect} selected={selected}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrewMaker"]},"metadata":{},"sourceType":"module"}