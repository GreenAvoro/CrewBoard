{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\src\\\\components\\\\FindMember.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction FindMember(props) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        updateSearch = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchedMembers = _useState4[0],\n        updateSearchedMembers = _useState4[1];\n\n  function handleChange(e) {\n    if (e.target.name === \"search\") {\n      updateSearch(e.target.value);\n    }\n  }\n\n  function deleteName(id) {\n    fetch('/api/member/delete', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(res => res.json());\n  }\n\n  useEffect(() => {\n    fetch('/api/member/search', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        search: search\n      })\n    }).then(res => res.json()).then(data => {\n      updateSearchedMembers(data);\n    });\n    console.log(searchedMembers);\n  }, [search]);\n  return React.createElement(\"div\", {\n    className: \"form-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Search Members\"), React.createElement(\"input\", {\n    name: \"search\",\n    className: \"search-bar\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"members-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, searchedMembers.map((member, i) => React.createElement(\"div\", {\n    className: \"members-search-item\",\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\".concat(member.firstName, \" \").concat(member.lastName)), React.createElement(\"div\", {\n    className: \"members-search-item-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"p\", {\n    onClick: e => {\n      if (window.confirm('Are you sure you wish to delete this item?')) {\n        deleteName(member._id);\n        updateSearchedMembers(prevState => prevState.filter(mem => mem._id !== this._id));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Delete\"))))));\n}\n\nexport default FindMember;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\client\\src\\components\\FindMember.js"],"names":["React","useState","useEffect","FindMember","props","search","updateSearch","searchedMembers","updateSearchedMembers","handleChange","e","target","name","value","deleteName","id","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","map","member","i","firstName","lastName","window","confirm","_id","prevState","filter","mem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction FindMember(props) {\r\n\r\n    const [search, updateSearch] = useState()\r\n    const [searchedMembers, updateSearchedMembers] = useState([])\r\n\r\n    function handleChange(e) {\r\n        if (e.target.name === \"search\") {\r\n            updateSearch(e.target.value)\r\n        }\r\n\r\n\r\n    }\r\n    function deleteName(id){\r\n        fetch('/api/member/delete', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id: id})\r\n        })\r\n        .then(res => res.json())\r\n    }\r\n    useEffect(() => {\r\n        fetch('/api/member/search', {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({search: search})\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            updateSearchedMembers(data)\r\n        })\r\n        console.log(searchedMembers)\r\n    }, [search])\r\n\r\n    return (\r\n        <div className=\"form-element\">\r\n            <h3>Search Members</h3>\r\n            <input name=\"search\" className=\"search-bar\" onChange={handleChange} />\r\n            <div className=\"members-search\">\r\n                {searchedMembers.map((member,i) => <div className=\"members-search-item\" key={i}>\r\n                    <p>{`${member.firstName} ${member.lastName}`}</p>\r\n                    <div className=\"members-search-item-buttons\">\r\n                        <p>Edit</p>\r\n                        <p onClick={(e) => { \r\n                            if (window.confirm('Are you sure you wish to delete this item?')) {\r\n                                deleteName(member._id)\r\n                                updateSearchedMembers(prevState => prevState.filter(mem => mem._id !== this._id))\r\n                            }\r\n                             } }>Delete</p>\r\n                    </div>\r\n            </div>)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FindMember"]},"metadata":{},"sourceType":"module"}