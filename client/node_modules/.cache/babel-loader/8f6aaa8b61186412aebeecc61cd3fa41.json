{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\src\\\\components\\\\MainPanel.js\";\nimport React, { useState } from 'react';\nimport convertDate from '../scripts/convertToDate';\nimport DateItem from './DateItem';\n\nfunction MainPanel(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        infoPanelDisplay = _useState2[0],\n        updateInfoPanelDisplay = _useState2[1];\n\n  const trainingList = props.trainings.map((training, i) => {\n    return React.createElement(DateItem, {\n      key: training._id,\n      name: training.name,\n      date: training.date,\n      colour: training.colour,\n      location: training.location,\n      squad: training.squad,\n      onClick: () => {\n        props.handleClick(\"current-training\", {\n          name: training.name,\n          date: training.date,\n          desc: training.description,\n          location: training.location,\n          startTime: training.startTime,\n          endTime: training.endTime,\n          squad: training.squad,\n          id: training._id,\n          crews: training.crews\n        });\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: \"smooth\"\n        });\n        updateInfoPanelDisplay(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  });\n\n  if (props.currentTraining.crews) {\n    const currentCrews = props.currentTraining.crews.map((crew, i) => {\n      return crew.members;\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"main-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dates-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Upcoming Training\"), React.createElement(\"div\", {\n    className: \"dates-list rounded-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"create-training-button\",\n    name: \"create-training\",\n    onClick: e => props.handleClick(\"create-training\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Create Training\")), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Today\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"All\"), trainingList)), React.createElement(\"div\", {\n    className: infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-panel-container-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Details\"), React.createElement(\"p\", {\n    className: \"close-button hide-desktop\",\n    onClick: () => updateInfoPanelDisplay(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"X\")), React.createElement(\"div\", {\n    className: \"info-panel rounded-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, !props.currentTraining.name ? \"No training chosen to display\" : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-panel-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.currentTraining.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, convertDate(props.currentTraining.date))), React.createElement(\"p\", {\n    className: \"info-panel-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\".concat(props.currentTraining.startTime, \" - \").concat(props.currentTraining.endTime)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.currentTraining.desc), React.createElement(\"p\", {\n    className: \"info-panel-location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Location: \", props.currentTraining.location), React.createElement(\"div\", {\n    className: \"info-panel-crews-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"info-panel-crews\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Crews\"), React.createElement(\"p\", {\n    className: \"create-training-button\",\n    name: \"create-training\",\n    onClick: e => props.pageupdate(\"crew-maker\", props.currentTraining, props.currentTraining.squad),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Create Crews\")), React.createElement(\"div\", {\n    className: \"info-panel-seperator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, currentCrews)))));\n}\n\nexport default MainPanel;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\client\\src\\components\\MainPanel.js"],"names":["React","useState","convertDate","DateItem","MainPanel","props","infoPanelDisplay","updateInfoPanelDisplay","trainingList","trainings","map","training","i","_id","name","date","colour","location","squad","handleClick","desc","description","startTime","endTime","id","crews","window","scrollTo","top","left","behavior","currentTraining","currentCrews","crew","members","e","pageupdate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport convertDate from '../scripts/convertToDate'\r\n\r\nimport DateItem from './DateItem'\r\n\r\nfunction MainPanel(props) {\r\n\r\n    const [infoPanelDisplay, updateInfoPanelDisplay] = useState(false)\r\n\r\n    const trainingList = props.trainings.map((training, i) => {\r\n        return (\r\n            <DateItem\r\n                key={training._id}\r\n                name={training.name}\r\n                date={training.date}\r\n                colour={training.colour}\r\n                location={training.location}\r\n                squad={training.squad}\r\n                onClick={() => {\r\n                    props.handleClick(\r\n                        \"current-training\",\r\n                        {\r\n                            name: training.name,\r\n                            date: training.date,\r\n                            desc: training.description,\r\n                            location: training.location,\r\n                            startTime: training.startTime,\r\n                            endTime: training.endTime,\r\n                            squad: training.squad,\r\n                            id: training._id,\r\n                            crews: training.crews\r\n                        }\r\n                    )\r\n                    window.scrollTo({\r\n                        top: 0,\r\n                        left: 0,\r\n                        behavior: \"smooth\"\r\n                    })\r\n                    updateInfoPanelDisplay(true)\r\n                }}\r\n            />\r\n        )\r\n    })\r\n    if (props.currentTraining.crews){\r\n        const currentCrews = props.currentTraining.crews.map((crew, i) => {\r\n            return crew.members\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"main-panel\">\r\n            <div className=\"dates-list-container\">\r\n                <h1>Upcoming Training</h1>\r\n\r\n                <div className=\"dates-list rounded-top\">\r\n                    <div\r\n                        className=\"create-training-button\"\r\n                        name=\"create-training\"\r\n                        onClick={(e) => props.handleClick(\"create-training\")}\r\n                    >\r\n                        <p>Create Training</p>\r\n                    </div>\r\n                    <h3>Today</h3>\r\n                    <h3>All</h3>\r\n                    {trainingList}\r\n                </div>\r\n            </div>\r\n            <div className={\r\n                infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\"\r\n            }>\r\n                <div className=\"info-panel-container-head\">\r\n                    <h1>Details</h1>\r\n                    <p className=\"close-button hide-desktop\" onClick={() => updateInfoPanelDisplay(false)}>X</p>\r\n                </div>\r\n                <div className=\"info-panel rounded-top\">\r\n\r\n                    {!props.currentTraining.name ? \"No training chosen to display\" :\r\n                        <div>\r\n                            <div className=\"info-panel-head\">\r\n                                <h1>{props.currentTraining.name}</h1>\r\n                                <p>{convertDate(props.currentTraining.date)}</p>\r\n                            </div>\r\n                            <p className=\"info-panel-time\">{`${props.currentTraining.startTime} - ${props.currentTraining.endTime}`}</p>\r\n                            <p>{props.currentTraining.desc}</p>\r\n                            <p className=\"info-panel-location\">Location: {props.currentTraining.location}</p>\r\n\r\n                            <div className=\"info-panel-crews-head\">\r\n                                <h2 className=\"info-panel-crews\">Crews</h2>\r\n                                <p\r\n                                    className=\"create-training-button\"\r\n                                    name=\"create-training\"\r\n                                    onClick={(e) => props.pageupdate(\"crew-maker\", props.currentTraining, props.currentTraining.squad)}>Create Crews</p>\r\n                            </div>\r\n                            <div className=\"info-panel-seperator\"></div>\r\n                            <p>{currentCrews}</p>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MainPanel"]},"metadata":{},"sourceType":"module"}