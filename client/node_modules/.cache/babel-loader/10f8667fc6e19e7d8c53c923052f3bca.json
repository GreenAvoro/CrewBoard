{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Member from'./Member';import MemberList from'./MemberList';import CrewList from'./CrewList';function CrewMaker(){var _useState=useState([\"Jenna\",\"Sophie\",\"Grace\",\"Isobel\",\"Chloe\",\"Kiwa\",\"Kate\",\"Danielle\"]),_useState2=_slicedToArray(_useState,2),memberList=_useState2[0],updateMemberList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],updateSelected=_useState4[1];var _useState5=useState([{id:1,members:[]},{id:2,members:[]}]),_useState6=_slicedToArray(_useState5,2),crews=_useState6[0],updateCrews=_useState6[1];function handleSelect(member_name){if(!selected.includes(member_name)){updateSelected(function(prevState){return[].concat(_toConsumableArray(prevState),[member_name]);});}else{updateSelected(function(prevState){return prevState.filter(function(item){return item!==member_name;});});}}function addMembers(crew_id){//Attempt adding selected to crews\nvar my_crews=crews.map(function(item){return item;});if(crew_id!=\"memList\"){my_crews.forEach(function(crew){if(crew.id==crew_id){selected.forEach(function(name){if(!crew.members.includes(name)){crew.members.push(name);}});}});}else{var newMemList=memberList.map(function(item){return item;});selected.forEach(function(mem){if(!newMemList.includes(mem)){newMemList.push(mem);}});updateMemberList(newMemList);}//Get selected out of memberlist\nselected.forEach(function(item){if(crew_id!=\"memList\"){updateMemberList(function(prevState){return prevState.filter(function(member){return member!==item;});});}//Get selected out of crewlist by checking every crew list except the one you're\n//trying to add to\nmy_crews.forEach(function(crew){if(crew.id!=crew_id){var new_crew=[];crew.members.forEach(function(member,i){if(!selected.includes(member)){new_crew.push(member);}});crew.members=new_crew;}});});//Add selected to given crew\nupdateCrews(my_crews);updateSelected([]);}function addCrew(){var my_crews=crews.map(function(item){return item;});my_crews.push({id:my_crews.length+1,members:[]});updateCrews(my_crews);}return React.createElement(\"div\",{className:\"content-wrapper\"},React.createElement(MemberList,{members:memberList,memberclick:handleSelect,selected:selected,listclick:addMembers}),React.createElement(CrewList,{crews:crews,callback:addMembers,memberclick:handleSelect,selected:selected,addcrew:addCrew}));}export default CrewMaker;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\src\\CrewMaker.js"],"names":["React","useState","Member","MemberList","CrewList","CrewMaker","memberList","updateMemberList","selected","updateSelected","id","members","crews","updateCrews","handleSelect","member_name","includes","prevState","filter","item","addMembers","crew_id","my_crews","map","forEach","crew","name","push","newMemList","mem","member","new_crew","i","addCrew","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Member from './Member'\r\nimport MemberList from './MemberList'\r\nimport CrewList from './CrewList'\r\n\r\nfunction CrewMaker() {\r\n    const [memberList, updateMemberList] = useState([\r\n        \"Jenna\",\r\n        \"Sophie\",\r\n        \"Grace\",\r\n        \"Isobel\",\r\n        \"Chloe\",\r\n        \"Kiwa\",\r\n        \"Kate\",\r\n        \"Danielle\"\r\n    ])\r\n    const [selected, updateSelected] = useState([])\r\n    const [crews, updateCrews] = useState([\r\n        { id: 1, members: [] },\r\n        { id: 2, members: [] }\r\n    ])\r\n\r\n\r\n    function handleSelect(member_name) {\r\n        if (!selected.includes(member_name)) {\r\n            updateSelected(prevState => [...prevState, member_name])\r\n        } else {\r\n            updateSelected(prevState => prevState.filter(item => {\r\n                return item !== member_name\r\n            }))\r\n        }\r\n    }\r\n    function addMembers(crew_id) {\r\n        //Attempt adding selected to crews\r\n        const my_crews = crews.map(item => item)\r\n        if (crew_id != \"memList\") {\r\n            my_crews.forEach(crew => {\r\n                if (crew.id == crew_id) {\r\n                    selected.forEach(name => {\r\n                        if (!crew.members.includes(name)) {\r\n                            crew.members.push(name)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            const newMemList = memberList.map(item => item)\r\n            selected.forEach(mem => {\r\n                if(!newMemList.includes(mem)){\r\n                    newMemList.push(mem)\r\n                }\r\n            })\r\n            updateMemberList(newMemList)\r\n            \r\n        }\r\n\r\n        //Get selected out of memberlist\r\n        selected.forEach(item => {\r\n            if (crew_id != \"memList\") {\r\n                updateMemberList(prevState => prevState.filter(member => {\r\n                    return member !== item\r\n                }))\r\n            }\r\n            //Get selected out of crewlist by checking every crew list except the one you're\r\n            //trying to add to\r\n            my_crews.forEach(crew => {\r\n                if (crew.id != crew_id) {\r\n                    var new_crew = []\r\n                    crew.members.forEach((member, i) => {\r\n                        if (!selected.includes(member)) {\r\n                            new_crew.push(member)\r\n                        }\r\n                    })\r\n                    crew.members = new_crew\r\n                }\r\n            })\r\n\r\n        })\r\n        //Add selected to given crew\r\n        updateCrews(my_crews)\r\n\r\n        updateSelected([])\r\n    }\r\n\r\n    function addCrew() {\r\n        const my_crews = crews.map(item => item)\r\n        my_crews.push({ id: my_crews.length + 1, members: [] })\r\n        updateCrews(my_crews)\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <MemberList members={memberList} memberclick={handleSelect} selected={selected} listclick={addMembers} />\r\n            <CrewList crews={crews} callback={addMembers} memberclick={handleSelect} selected={selected} addcrew={addCrew} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrewMaker"]},"metadata":{},"sourceType":"module"}