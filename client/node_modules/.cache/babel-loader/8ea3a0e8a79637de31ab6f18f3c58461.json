{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import convertDate from'../scripts/convertToDate';import compareWeek from'../scripts/findWeek';import Crews from'./Crews';import AddMemeber from'./AddMember';import FindMemeber from'./FindMember';import DateItem from'./DateItem';function MainPanel(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),infoPanelDisplay=_useState2[0],updateInfoPanelDisplay=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),AddMemberDropDown=_useState4[0],updateAddMemberDropDown=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),FindMemberDropDown=_useState6[0],updateFindMemberDropDown=_useState6[1];var trainingList=props.trainings.map(function(training,i){return React.createElement(DateItem,{key:training._id,name:training.name,date:training.date,colour:training.colour,location:training.location,squad:training.squad,onClick:function onClick(){props.handleClick(\"current-training\",{name:training.name,date:training.date,desc:training.description,location:training.location,startTime:training.startTime,endTime:training.endTime,squad:training.squad,id:training._id,crews:training.crews});//This was for when Info Panel wasn't fixed\n// window.scrollTo({\n//     top: 0,\n//     left: 0,\n//     behavior: \"smooth\"\n// })\nupdateInfoPanelDisplay(true);}});});trainingList.sort(function(a,b){return new Date(a.props.date)-new Date(b.props.date);});if(props.currentPanel==\"trainings\"){return React.createElement(\"div\",{className:\"main-panel\"},React.createElement(\"div\",{className:\"dates-list-container\"},React.createElement(\"h1\",null,\"Upcoming Training\"),React.createElement(\"div\",{className:\"dates-list rounded-top\"},React.createElement(\"div\",{className:\"create-training-button\",name:\"create-training\",onClick:function onClick(e){return props.handleClick(\"create-training\");}},React.createElement(\"p\",null,\"Create Training\")),React.createElement(\"h3\",null,\"Today\"),trainingList.filter(function(train){return convertDate(train.props.date)===convertDate(Date.now());}),React.createElement(\"h3\",null,\"This Week\"),trainingList.filter(function(train){return compareWeek(train.props.date,Date.now());}),React.createElement(\"h3\",null,\"All\"),trainingList.filter(function(train){return Date.parse(train.props.date)>Date.now();}))),React.createElement(\"div\",{className:infoPanelDisplay?\"info-panel-container display\":\"info-panel-container\"},React.createElement(\"div\",{className:\"info-panel-container-head\"},React.createElement(\"h1\",null,\"Details\"),React.createElement(\"p\",{className:\"close-button hide-desktop\",onClick:function onClick(){return updateInfoPanelDisplay(false);}},\"X\")),React.createElement(\"div\",{className:\"info-panel rounded-top\"},!props.currentTraining.name?\"Select a training to display its information\":React.createElement(\"div\",null,React.createElement(\"div\",{className:\"info-panel-head\"},React.createElement(\"h1\",null,props.currentTraining.name),React.createElement(\"p\",null,convertDate(props.currentTraining.date))),React.createElement(\"p\",{className:\"info-panel-time\"},\"\".concat(props.currentTraining.startTime,\" - \").concat(props.currentTraining.endTime)),React.createElement(\"p\",null,props.currentTraining.desc),React.createElement(\"p\",{className:\"info-panel-location\"},\"Location: \",props.currentTraining.location),React.createElement(\"div\",{className:\"info-panel-crews-head\"},React.createElement(\"h2\",{className:\"info-panel-crews\"},\"Crews\"),React.createElement(\"p\",{className:\"create-training-button\",name:\"create-training\",onClick:function onClick(e){return props.pageupdate(\"crew-maker\",props.currentTraining,props.currentTraining.squad);}},\"Create Crews\")),React.createElement(\"div\",{className:\"info-panel-seperator\"}),React.createElement(\"div\",{className:\"info-panel-crew-list\"},React.createElement(Crews,{crews:props.currentTraining.crews}))))));}else if(props.currentPanel==\"settings\"){var handleSubmit=function handleSubmit(e){};return React.createElement(\"div\",{className:\"settings-panel-container\"},React.createElement(\"h1\",null,\"Settings\"),React.createElement(\"div\",{className:\"seperator\"}),React.createElement(\"div\",{className:\"settings-panel\"},React.createElement(\"h2\",null,\"Account\"),React.createElement(\"p\",{className:\"create-training-button\"},\"Change Password\"),React.createElement(\"br\",null),React.createElement(\"p\",{className:\"create-training-button\"},\"Change User Name\"),React.createElement(\"h2\",null,\"Member Management\"),React.createElement(\"p\",{className:\"form-drop-down\",onClick:function onClick(){return updateAddMemberDropDown(function(prevState){return!prevState;});}},\"Add Member \\u23F7\"),AddMemberDropDown?React.createElement(AddMemeber,{squads:props.squads}):false,React.createElement(\"br\",null),React.createElement(\"p\",{className:\"form-drop-down\",onClick:function onClick(){return updateFindMemberDropDown(function(prevState){return!prevState;});}},\"Find Members \\u23F7\"),FindMemberDropDown?React.createElement(FindMemeber,null):false,React.createElement(\"br\",null),React.createElement(\"h2\",null,\"Team Management\"),React.createElement(\"h2\",null,\"Help & Support\")));}}export default MainPanel;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\client\\src\\components\\MainPanel.js"],"names":["React","useState","convertDate","compareWeek","Crews","AddMemeber","FindMemeber","DateItem","MainPanel","props","infoPanelDisplay","updateInfoPanelDisplay","AddMemberDropDown","updateAddMemberDropDown","FindMemberDropDown","updateFindMemberDropDown","trainingList","trainings","map","training","i","_id","name","date","colour","location","squad","handleClick","desc","description","startTime","endTime","id","crews","sort","a","b","Date","currentPanel","e","filter","train","now","parse","currentTraining","pageupdate","handleSubmit","prevState","squads"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport convertDate from '../scripts/convertToDate'\r\nimport compareWeek from '../scripts/findWeek'\r\nimport Crews from './Crews'\r\nimport AddMemeber from './AddMember'\r\nimport FindMemeber from './FindMember'\r\n\r\nimport DateItem from './DateItem'\r\n\r\nfunction MainPanel(props) {\r\n\r\n    const [infoPanelDisplay, updateInfoPanelDisplay] = useState(false)\r\n    const [AddMemberDropDown, updateAddMemberDropDown] = useState(false)\r\n    const [FindMemberDropDown, updateFindMemberDropDown] = useState(false)\r\n\r\n    const trainingList = props.trainings.map((training, i) => {\r\n        return (\r\n            <DateItem\r\n                key={training._id}\r\n                name={training.name}\r\n                date={training.date}\r\n                colour={training.colour}\r\n                location={training.location}\r\n                squad={training.squad}\r\n                onClick={() => {\r\n                    props.handleClick(\r\n                        \"current-training\",\r\n                        {\r\n                            name: training.name,\r\n                            date: training.date,\r\n                            desc: training.description,\r\n                            location: training.location,\r\n                            startTime: training.startTime,\r\n                            endTime: training.endTime,\r\n                            squad: training.squad,\r\n                            id: training._id,\r\n                            crews: training.crews\r\n                        }\r\n                    )\r\n                    //This was for when Info Panel wasn't fixed\r\n                    // window.scrollTo({\r\n                    //     top: 0,\r\n                    //     left: 0,\r\n                    //     behavior: \"smooth\"\r\n                    // })\r\n                    updateInfoPanelDisplay(true)\r\n                }}\r\n            />\r\n        )\r\n    })\r\n\r\n    trainingList.sort((a, b) => new Date(a.props.date) - new Date(b.props.date))\r\n\r\n    if (props.currentPanel == \"trainings\") {\r\n        return (\r\n            <div className=\"main-panel\">\r\n                <div className=\"dates-list-container\">\r\n                    <h1>Upcoming Training</h1>\r\n\r\n                    <div className=\"dates-list rounded-top\">\r\n                        <div\r\n                            className=\"create-training-button\"\r\n                            name=\"create-training\"\r\n                            onClick={(e) => props.handleClick(\"create-training\")}\r\n                        >\r\n                            <p>Create Training</p>\r\n                        </div>\r\n                        <h3>Today</h3>\r\n                        {trainingList.filter(train => convertDate(train.props.date) === convertDate(Date.now()))}\r\n                        <h3>This Week</h3>\r\n                        {trainingList.filter(train => compareWeek(train.props.date, Date.now()))}\r\n                        <h3>All</h3>\r\n                        {trainingList.filter(train => Date.parse(train.props.date) > Date.now())}\r\n                    </div>\r\n                </div>\r\n                <div className={\r\n                    infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\"\r\n                }>\r\n                    <div className=\"info-panel-container-head\">\r\n                        <h1>Details</h1>\r\n                        <p className=\"close-button hide-desktop\" onClick={() => updateInfoPanelDisplay(false)}>X</p>\r\n                    </div>\r\n                    <div className=\"info-panel rounded-top\">\r\n\r\n                        {!props.currentTraining.name ? \"Select a training to display its information\" :\r\n                            <div>\r\n                                <div className=\"info-panel-head\">\r\n                                    <h1>{props.currentTraining.name}</h1>\r\n                                    <p>{convertDate(props.currentTraining.date)}</p>\r\n                                </div>\r\n                                <p className=\"info-panel-time\">{`${props.currentTraining.startTime} - ${props.currentTraining.endTime}`}</p>\r\n                                <p>{props.currentTraining.desc}</p>\r\n                                <p className=\"info-panel-location\">Location: {props.currentTraining.location}</p>\r\n\r\n                                <div className=\"info-panel-crews-head\">\r\n                                    <h2 className=\"info-panel-crews\">Crews</h2>\r\n                                    <p\r\n                                        className=\"create-training-button\"\r\n                                        name=\"create-training\"\r\n                                        onClick={(e) => props.pageupdate(\"crew-maker\", props.currentTraining, props.currentTraining.squad)}>Create Crews</p>\r\n                                </div>\r\n                                <div className=\"info-panel-seperator\"></div>\r\n                                <div className=\"info-panel-crew-list\">\r\n                                    <Crews crews={props.currentTraining.crews} />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }else if(props.currentPanel == \"settings\"){\r\n        function handleSubmit(e){\r\n\r\n        }\r\n        return(\r\n                <div className=\"settings-panel-container\">\r\n                    <h1>Settings</h1>\r\n                    <div className=\"seperator\"></div>\r\n                    <div className=\"settings-panel\">\r\n                        <h2>Account</h2>\r\n                        <p className=\"create-training-button\">Change Password</p><br></br>\r\n                        <p className=\"create-training-button\">Change User Name</p>\r\n\r\n                        <h2>Member Management</h2>\r\n                        <p className=\"form-drop-down\" onClick={() => updateAddMemberDropDown(prevState => !prevState)}>Add Member &#9207;</p>\r\n                        {AddMemberDropDown ? <AddMemeber squads={props.squads}/> : false}<br></br>\r\n                        <p className=\"form-drop-down\" onClick={() => updateFindMemberDropDown(prevState => !prevState)}>Find Members &#9207;</p>\r\n                        {FindMemberDropDown ? <FindMemeber /> : false}<br></br>\r\n\r\n                        <h2>Team Management</h2>\r\n\r\n                        <h2>Help & Support</h2>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default MainPanel"]},"metadata":{},"sourceType":"module"}