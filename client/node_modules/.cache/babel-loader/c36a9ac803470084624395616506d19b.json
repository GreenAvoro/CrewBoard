{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import convertDate from'../scripts/convertToDate';import DateItem from'./DateItem';function MainPanel(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),infoPanelDisplay=_useState2[0],updateInfoPanelDisplay=_useState2[1];var trainingList=props.trainings.map(function(training,i){return React.createElement(DateItem,{key:training._id,name:training.name,date:training.date,colour:training.colour,location:training.location,squad:training.squad,onClick:function onClick(){props.handleClick(\"current-training\",{name:training.name,date:training.date,desc:training.description,location:training.location,startTime:training.startTime,endTime:training.endTime,squad:training.squad});window.scrollTo({top:0,left:0,behavior:\"smooth\"});updateInfoPanelDisplay(true);}});});return React.createElement(\"div\",{className:\"main-panel\"},React.createElement(\"div\",{className:\"dates-list-container\"},React.createElement(\"h1\",null,\"Upcoming Training\"),React.createElement(\"div\",{className:\"dates-list rounded-top\"},React.createElement(\"div\",{className:\"create-training-button\",name:\"create-training\",onClick:function onClick(e){return props.handleClick(\"create-training\");}},React.createElement(\"p\",null,\"Create Training\")),React.createElement(\"h3\",null,\"Today\"),React.createElement(\"h3\",null,\"All\"),trainingList)),React.createElement(\"div\",{className:infoPanelDisplay?\"info-panel-container display\":\"info-panel-container\"},React.createElement(\"div\",{className:\"info-panel-container-head\"},React.createElement(\"h1\",null,\"Details\"),React.createElement(\"p\",{className:\"close-button hide-desktop\",onClick:function onClick(){return updateInfoPanelDisplay(false);}},\"X\")),React.createElement(\"div\",{className:\"info-panel rounded-top\"},!props.currentTraining.name?\"No training chosen to display\":React.createElement(\"div\",null,React.createElement(\"div\",{className:\"info-panel-head\"},React.createElement(\"h1\",null,props.currentTraining.name),React.createElement(\"p\",null,convertDate(props.currentTraining.date))),React.createElement(\"p\",{className:\"info-panel-time\"},\"\".concat(props.currentTraining.startTime,\" - \").concat(props.currentTraining.endTime)),React.createElement(\"p\",null,props.currentTraining.desc),React.createElement(\"p\",{className:\"info-panel-location\"},\"Location: \",props.currentTraining.location),React.createElement(\"div\",{className:\"info-panel-crews-head\"},React.createElement(\"h2\",{className:\"info-panel-crews\"},\"Crews\"),React.createElement(\"p\",{className:\"create-training-button\",name:\"create-training\",onClick:function onClick(e){return props.pageupdate(\"crew-maker\",props.currentTraining,props.currentTraining.squad);}},\"Create Crews\")),React.createElement(\"div\",{className:\"info-panel-seperator\"})))));}export default MainPanel;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\client\\src\\components\\MainPanel.js"],"names":["React","useState","convertDate","DateItem","MainPanel","props","infoPanelDisplay","updateInfoPanelDisplay","trainingList","trainings","map","training","i","_id","name","date","colour","location","squad","handleClick","desc","description","startTime","endTime","window","scrollTo","top","left","behavior","e","currentTraining","pageupdate"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,eAE6BJ,QAAQ,CAAC,KAAD,CAFrC,wCAEfK,gBAFe,eAEGC,sBAFH,eAItB,GAAMC,CAAAA,YAAY,CAAGH,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoB,SAACC,QAAD,CAAWC,CAAX,CAAiB,CACtD,MACI,qBAAC,QAAD,EACI,GAAG,CAAED,QAAQ,CAACE,GADlB,CAEI,IAAI,CAAEF,QAAQ,CAACG,IAFnB,CAGI,IAAI,CAAEH,QAAQ,CAACI,IAHnB,CAII,MAAM,CAAEJ,QAAQ,CAACK,MAJrB,CAKI,QAAQ,CAAEL,QAAQ,CAACM,QALvB,CAMI,KAAK,CAAEN,QAAQ,CAACO,KANpB,CAOI,OAAO,CAAE,kBAAM,CACXb,KAAK,CAACc,WAAN,CACI,kBADJ,CAEI,CACIL,IAAI,CAAEH,QAAQ,CAACG,IADnB,CAEIC,IAAI,CAAEJ,QAAQ,CAACI,IAFnB,CAGIK,IAAI,CAAET,QAAQ,CAACU,WAHnB,CAIIJ,QAAQ,CAAEN,QAAQ,CAACM,QAJvB,CAKIK,SAAS,CAAEX,QAAQ,CAACW,SALxB,CAMIC,OAAO,CAAEZ,QAAQ,CAACY,OANtB,CAOIL,KAAK,CAAEP,QAAQ,CAACO,KAPpB,CAFJ,EAYAM,MAAM,CAACC,QAAP,CAAgB,CACZC,GAAG,CAAE,CADO,CAEZC,IAAI,CAAE,CAFM,CAGZC,QAAQ,CAAE,QAHE,CAAhB,EAKArB,sBAAsB,CAAC,IAAD,CAAtB,CACH,CA1BL,EADJ,CA8BH,CA/BoB,CAArB,CAgCA,MACI,4BAAK,SAAS,CAAC,YAAf,EACI,2BAAK,SAAS,CAAC,sBAAf,EACI,kDADJ,CAGI,2BAAK,SAAS,CAAC,wBAAf,EACI,2BACI,SAAS,CAAC,wBADd,CAEI,IAAI,CAAC,iBAFT,CAGI,OAAO,CAAE,iBAACsB,CAAD,QAAOxB,CAAAA,KAAK,CAACc,WAAN,CAAkB,iBAAlB,CAAP,EAHb,EAKI,+CALJ,CADJ,CAQI,sCARJ,CASI,oCATJ,CAUKX,YAVL,CAHJ,CADJ,CAiBI,2BAAK,SAAS,CACVF,gBAAgB,CAAG,8BAAH,CAAoC,sBADxD,EAGI,2BAAK,SAAS,CAAC,2BAAf,EACI,wCADJ,CAEI,yBAAG,SAAS,CAAC,2BAAb,CAAyC,OAAO,CAAE,yBAAMC,CAAAA,sBAAsB,CAAC,KAAD,CAA5B,EAAlD,MAFJ,CAHJ,CAOI,2BAAK,SAAS,CAAC,wBAAf,EAEK,CAACF,KAAK,CAACyB,eAAN,CAAsBhB,IAAvB,CAA8B,+BAA9B,CACG,+BACI,2BAAK,SAAS,CAAC,iBAAf,EACI,8BAAKT,KAAK,CAACyB,eAAN,CAAsBhB,IAA3B,CADJ,CAEI,6BAAIZ,WAAW,CAACG,KAAK,CAACyB,eAAN,CAAsBf,IAAvB,CAAf,CAFJ,CADJ,CAKI,yBAAG,SAAS,CAAC,iBAAb,YAAmCV,KAAK,CAACyB,eAAN,CAAsBR,SAAzD,eAAwEjB,KAAK,CAACyB,eAAN,CAAsBP,OAA9F,EALJ,CAMI,6BAAIlB,KAAK,CAACyB,eAAN,CAAsBV,IAA1B,CANJ,CAOI,yBAAG,SAAS,CAAC,qBAAb,eAA8Cf,KAAK,CAACyB,eAAN,CAAsBb,QAApE,CAPJ,CASI,2BAAK,SAAS,CAAC,uBAAf,EACI,0BAAI,SAAS,CAAC,kBAAd,UADJ,CAEI,yBACI,SAAS,CAAC,wBADd,CAEI,IAAI,CAAC,iBAFT,CAGI,OAAO,CAAE,iBAACY,CAAD,QAAOxB,CAAAA,KAAK,CAAC0B,UAAN,CAAiB,YAAjB,CAA8B1B,KAAK,CAACyB,eAApC,CAAoDzB,KAAK,CAACyB,eAAN,CAAsBZ,KAA1E,CAAP,EAHb,iBAFJ,CATJ,CAgBI,2BAAK,SAAS,CAAC,sBAAf,EAhBJ,CAHR,CAPJ,CAjBJ,CADJ,CAqDH,CACD,cAAed,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport convertDate from '../scripts/convertToDate'\r\n\r\nimport DateItem from './DateItem'\r\n\r\nfunction MainPanel(props) {\r\n\r\n    const [infoPanelDisplay, updateInfoPanelDisplay] = useState(false)\r\n\r\n    const trainingList = props.trainings.map((training, i) => {\r\n        return (\r\n            <DateItem\r\n                key={training._id}\r\n                name={training.name}\r\n                date={training.date}\r\n                colour={training.colour}\r\n                location={training.location}\r\n                squad={training.squad}\r\n                onClick={() => {\r\n                    props.handleClick(\r\n                        \"current-training\",\r\n                        {\r\n                            name: training.name,\r\n                            date: training.date,\r\n                            desc: training.description,\r\n                            location: training.location,\r\n                            startTime: training.startTime,\r\n                            endTime: training.endTime,\r\n                            squad: training.squad\r\n                        }\r\n                    )\r\n                    window.scrollTo({\r\n                        top: 0,\r\n                        left: 0,\r\n                        behavior: \"smooth\"\r\n                    })\r\n                    updateInfoPanelDisplay(true)\r\n                }}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"main-panel\">\r\n            <div className=\"dates-list-container\">\r\n                <h1>Upcoming Training</h1>\r\n\r\n                <div className=\"dates-list rounded-top\">\r\n                    <div\r\n                        className=\"create-training-button\"\r\n                        name=\"create-training\"\r\n                        onClick={(e) => props.handleClick(\"create-training\")}\r\n                    >\r\n                        <p>Create Training</p>\r\n                    </div>\r\n                    <h3>Today</h3>\r\n                    <h3>All</h3>\r\n                    {trainingList}\r\n                </div>\r\n            </div>\r\n            <div className={\r\n                infoPanelDisplay ? \"info-panel-container display\" : \"info-panel-container\"\r\n            }>\r\n                <div className=\"info-panel-container-head\">\r\n                    <h1>Details</h1>\r\n                    <p className=\"close-button hide-desktop\" onClick={() => updateInfoPanelDisplay(false)}>X</p>\r\n                </div>\r\n                <div className=\"info-panel rounded-top\">\r\n\r\n                    {!props.currentTraining.name ? \"No training chosen to display\" :\r\n                        <div>\r\n                            <div className=\"info-panel-head\">\r\n                                <h1>{props.currentTraining.name}</h1>\r\n                                <p>{convertDate(props.currentTraining.date)}</p>\r\n                            </div>\r\n                            <p className=\"info-panel-time\">{`${props.currentTraining.startTime} - ${props.currentTraining.endTime}`}</p>\r\n                            <p>{props.currentTraining.desc}</p>\r\n                            <p className=\"info-panel-location\">Location: {props.currentTraining.location}</p>\r\n\r\n                            <div className=\"info-panel-crews-head\">\r\n                                <h2 className=\"info-panel-crews\">Crews</h2>\r\n                                <p \r\n                                    className=\"create-training-button\"\r\n                                    name=\"create-training\"\r\n                                    onClick={(e) => props.pageupdate(\"crew-maker\",props.currentTraining,props.currentTraining.squad)}>Create Crews</p>\r\n                            </div>\r\n                            <div className=\"info-panel-seperator\"></div>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MainPanel"]},"metadata":{},"sourceType":"module"}