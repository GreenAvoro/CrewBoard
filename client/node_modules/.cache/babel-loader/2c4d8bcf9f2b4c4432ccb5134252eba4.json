{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haydo\\\\Desktop\\\\React Apps\\\\crewboard\\\\client\\\\src\\\\components\\\\AddMember.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction AddMember(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        updateFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        updateLastName = _useState4[1];\n\n  const _useState5 = useState(\"all\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        squad = _useState6[0],\n        updateSquad = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errors = _useState8[0],\n        updateErrors = _useState8[1];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    updateErrors([]);\n    console.log(\"trying to submit\");\n\n    if (firstName === \"\" || lastName === \"\") {\n      updateErrors(prevState => {\n        const newErrors = prevState;\n        newErrors.push(\"Fields must not be empty\");\n        return newErrors;\n      });\n      return;\n    }\n\n    const data_to_send = {\n      firstName: firstName,\n      lastName: lastName,\n      squad: squad\n    };\n    console.log(data_to_send);\n    fetch('/api/member', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data_to_send)\n    }).then(res => console.log(res));\n  }\n\n  function handleChange(e) {\n    if (e.target.name === \"firstName\") updateFirstName(e.target.value);else if (e.target.name === \"lastName\") updateLastName(e.target.value);else if (e.target.name === \"squads\") updateSquad(e.target.value);\n  }\n\n  const squadsOptions = props.squads.map((squad, i) => {\n    return React.createElement(\"option\", {\n      key: i,\n      value: squad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, squad);\n  });\n  const errorsList = errors.map((error, i) => React.createElement(\"li\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, error));\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"errorsList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, errorsList), React.createElement(\"div\", {\n    className: \"form-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    name: \"firstName\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    name: \"lastName\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"select\", {\n    className: \"create-training-button\",\n    value: squad,\n    onChange: handleChange,\n    name: \"squads\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"All Squads\"), squadsOptions), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"create-training-button\",\n    value: \"Add Member\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nexport default AddMember;","map":{"version":3,"sources":["C:\\Users\\haydo\\Desktop\\React Apps\\crewboard\\client\\src\\components\\AddMember.js"],"names":["React","useState","useEffect","AddMember","props","firstName","updateFirstName","lastName","updateLastName","squad","updateSquad","errors","updateErrors","handleSubmit","e","preventDefault","console","log","prevState","newErrors","push","data_to_send","fetch","method","headers","body","JSON","stringify","then","res","handleChange","target","name","value","squadsOptions","squads","map","i","errorsList","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAMA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,oBAEeH,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEfI,SAFe;AAAA,QAEJC,eAFI;;AAAA,qBAGaL,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,QAGfM,QAHe;AAAA,QAGLC,cAHK;;AAAA,qBAIOP,QAAQ,CAAC,KAAD,CAJf;AAAA;AAAA,QAIfQ,KAJe;AAAA,QAIRC,WAJQ;;AAAA,qBAMST,QAAQ,CAAC,EAAD,CANjB;AAAA;AAAA,QAMfU,MANe;AAAA,QAMPC,YANO;;AAQtB,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AAEA,QAAGZ,SAAS,KAAK,EAAd,IAAoBE,QAAQ,KAAK,EAApC,EAAuC;AACnCK,MAAAA,YAAY,CAACM,SAAS,IAAI;AACtB,cAAMC,SAAS,GAAGD,SAAlB;AACAC,QAAAA,SAAS,CAACC,IAAV,CAAe,0BAAf;AACA,eAAOD,SAAP;AACH,OAJW,CAAZ;AAKA;AACH;;AAED,UAAME,YAAY,GAAG;AACjBhB,MAAAA,SAAS,EAAEA,SADM;AAEjBE,MAAAA,QAAQ,EAAEA,QAFO;AAGjBE,MAAAA,KAAK,EAAEA;AAHU,KAArB;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AAEAC,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFQ;AAGjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;AAHW,KAAhB,CAAL,CAKCO,IALD,CAKMC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CALb;AAMH;;AAED,WAASC,YAAT,CAAsBhB,CAAtB,EAAwB;AACpB,QAAGA,CAAC,CAACiB,MAAF,CAASC,IAAT,KAAkB,WAArB,EAAkC1B,eAAe,CAACQ,CAAC,CAACiB,MAAF,CAASE,KAAV,CAAf,CAAlC,KACK,IAAGnB,CAAC,CAACiB,MAAF,CAASC,IAAT,KAAkB,UAArB,EAAiCxB,cAAc,CAACM,CAAC,CAACiB,MAAF,CAASE,KAAV,CAAd,CAAjC,KACA,IAAGnB,CAAC,CAACiB,MAAF,CAASC,IAAT,KAAkB,QAArB,EAA+BtB,WAAW,CAACI,CAAC,CAACiB,MAAF,CAASE,KAAV,CAAX;AACvC;;AACD,QAAMC,aAAa,GAAG9B,KAAK,CAAC+B,MAAN,CAAaC,GAAb,CAAiB,CAAC3B,KAAD,EAAO4B,CAAP,KAAa;AAChD,WAAO;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAE5B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,KAA/B,CAAP;AACH,GAFqB,CAAtB;AAGA,QAAM6B,UAAU,GAAG3B,MAAM,CAACyB,GAAP,CAAW,CAACG,KAAD,EAAQF,CAAR,KAAc;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaE,KAAb,CAAzB,CAAnB;AACA,SACI;AAAM,IAAA,QAAQ,EAAE1B,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSyB,UADT,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,QAAQ,EAAER,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,EAQI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,QAAQ,EAAEA,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,EAYI;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAA2C,IAAA,KAAK,EAAErB,KAAlD;AAAyD,IAAA,QAAQ,EAAEqB,YAAnE;AAAiF,IAAA,IAAI,EAAC,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKI,aAFL,CAZJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAiBI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,wBAA/B;AAAwD,IAAA,KAAK,EAAC,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ;AAsBH;;AAED,eAAe/B,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nfunction AddMember(props) {\r\n\r\n    const [firstName, updateFirstName] = useState(\"\")\r\n    const [lastName, updateLastName] = useState(\"\")\r\n    const [squad, updateSquad] = useState(\"all\")\r\n\r\n    const [errors, updateErrors] = useState([])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        updateErrors([])\r\n        console.log(\"trying to submit\")\r\n\r\n        if(firstName === \"\" || lastName === \"\"){\r\n            updateErrors(prevState => {\r\n                const newErrors = prevState\r\n                newErrors.push(\"Fields must not be empty\")\r\n                return newErrors\r\n            })\r\n            return\r\n        }\r\n\r\n        const data_to_send = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            squad: squad\r\n        }\r\n\r\n        console.log(data_to_send)\r\n\r\n        fetch('/api/member', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data_to_send)\r\n        })\r\n        .then(res => console.log(res))\r\n    }\r\n\r\n    function handleChange(e){\r\n        if(e.target.name === \"firstName\") updateFirstName(e.target.value)\r\n        else if(e.target.name === \"lastName\") updateLastName(e.target.value)\r\n        else if(e.target.name === \"squads\") updateSquad(e.target.value)\r\n    }\r\n    const squadsOptions = props.squads.map((squad,i) => {\r\n        return <option key={i} value={squad}>{squad}</option>\r\n    })\r\n    const errorsList = errors.map((error, i) => <li key={i}>{error}</li>)\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <ul className=\"errorsList\">\r\n                    {errorsList}\r\n                </ul>\r\n            <div className=\"form-element\">\r\n                <label>First Name</label>\r\n                <input name=\"firstName\" type=\"text\" onChange={handleChange}></input>\r\n            </div>\r\n            <div className=\"form-element\">\r\n                <label>Last Name</label>\r\n                <input name=\"lastName\" type=\"text\" onChange={handleChange}></input>\r\n            </div>\r\n            <select className=\"create-training-button\" value={squad} onChange={handleChange} name=\"squads\">\r\n                <option value=\"all\">All Squads</option>\r\n                {squadsOptions}\r\n            </select>\r\n            <br></br>\r\n            <input type=\"submit\" className=\"create-training-button\" value=\"Add Member\"/>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default AddMember"]},"metadata":{},"sourceType":"module"}